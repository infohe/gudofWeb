{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { names, toolType } from '../index';\nimport Navbar from '../Navbar';\nimport Head from 'next/head';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport { stringSpaceToHyphen } from '..';\nimport Slidertools from '../components/Slidertools';\nimport Functions from '../components/Functions';\nimport Colorcode from '../components/Colorcode';\nconst {\n  TabPane\n} = _Tabs;\nexport default function Instrumentation({\n  params,\n  functions,\n  toolType,\n  names\n}) {\n  const router = useRouter();\n  const [visible, setVisible] = React.useState(false);\n\n  const showDrawer = () => {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  React.useEffect(() => {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n  const [id, setId] = React.useState();\n  const [category, setCategory] = React.useState();\n  React.useEffect(() => {\n    if (router && router.query) {\n      names.map(item => {\n        if (stringSpaceToHyphen(item.display) === router.query.name) {\n          setId(item.id);\n          setCategory(item.category);\n          console.log(item.category);\n        }\n      });\n    }\n  }, [router, router.query]);\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, router.query.name, \" Electrical Tools\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\"\n  }), functions !== undefined && functions.map(item => stringSpaceToHyphen(item.display) === router.query.name && __jsx(\"meta\", {\n    key: \"description\",\n    name: \"description\",\n    content: item.desc\n  }))), __jsx(Navbar, {\n    showDrawer: showDrawer\n  }), __jsx(\"div\", {\n    className: \"tools-container\"\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType,\n    onClose: () => setVisible(false)\n  })), __jsx(\"div\", {\n    className: \"tools-left\"\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType,\n    key2: \"2\"\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\"\n  }, category === \"electrical\" && __jsx(Functions, {\n    id: id\n  }), category === \"color\" && __jsx(Colorcode, null))));\n}\nexport async function getStaticPaths() {\n  const tools = [{\n    name: \"resistancetemp\",\n    display: \"Resistance (from temperature)\",\n    id: 13,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"linearma\",\n    display: \"Linear mA to Square Root mA\",\n    id: 14,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"temperature\",\n    display: \"Temperature (from resistance)\",\n    id: 15,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"linear\",\n    display: \"Linear to Square Root percentage\",\n    id: 17,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"ohms\",\n    display: \"Ohms law (R)\",\n    id: 19,\n    stringId: \"19\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"ohmsi\",\n    display: \"Ohms law (I)\",\n    id: 20,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"aircore\",\n    display: \"Air Core Inductance\",\n    id: 21,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    // name:\"laser\",display:\"Laser Real-Time Converter\",id:22,type:\"electrical\",category:\"electrical\"},{\n    name: \"ohmsv\",\n    display: \"Ohms Law (V)\",\n    id: 23,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"parallel\",\n    display: \"Parallel Resistance\",\n    id: 24,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"velocitysound\",\n    display: \"Velocity of Sound\",\n    id: 25,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"lcresonance\",\n    display: \"LC Resonance\",\n    id: 26,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"voltagediv\",\n    display: \"Voltage Divider\",\n    id: 27,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"speedtime\",\n    display: \"Time (Speed)\",\n    id: 28,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"wheat\",\n    display: \"Wheatstone bridge\",\n    id: 29,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"powerrv\",\n    display: \"Power (with R,V)\",\n    id: 31,\n    stringId: \"31\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"powervi\",\n    display: \"Power (with V,I)\",\n    id: 32,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"frequency\",\n    display: \"Frequency\",\n    id: 33,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"timeperiod\",\n    display: \"Time Period\",\n    id: 22,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"speedspeed\",\n    display: \"Speed\",\n    id: 34,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"distance\",\n    display: \"Distance /(Speed)\",\n    id: 35,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"powerir\",\n    display: \"Power (with R,I)\",\n    id: 40,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    // name:\"wavelength\",display:\"Wavelength\",id:41,type:\"extra\",category:\"electrical\"},{\n    name: \"powerline\",\n    display: \"Power Factor 3Phase (Line)\",\n    id: 42,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"powerneutral\",\n    display: \"Power Factor 3Phase (neutral)\",\n    id: 43,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"power\",\n    display: \"Power Factor Single Phase\",\n    id: 44,\n    stringId: \"44\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"speedhorse\",\n    display: \"Speed (Horsepower)\",\n    id: 46,\n    stringId: \"46\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"torque\",\n    display: \"Torque (HorsePower)\",\n    id: 47,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"horsepower\",\n    display: \"HorsePower\",\n    id: 48,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"twoseals\",\n    display: \"Level measurement Two Seals\",\n    id: 49,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"onesealabove\",\n    display: \"Level measurement one seal above\",\n    id: 50,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"onesealbelow\",\n    display: \"Level measurement one seal below\",\n    id: 51,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"bubblelevel\",\n    display: \"Bubble Level\",\n    id: 52,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"bubbleinterface\",\n    display: \"Bubble Interface\",\n    id: 53,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"twosealint\",\n    display: \"Two Seal Interface\",\n    id: 54,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"opentank\",\n    display: \"Open Tank\",\n    id: 55,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"intwet\",\n    display: \"Interface Wet Leg\",\n    id: 56,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"liquidpurge\",\n    display: \"Liquid Purge\",\n    id: 57,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"LT3\",\n    display: \"Level Transmission Closed Vessel\",\n    id: 58,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"short\",\n    display: \"Short Circuit Calculation\",\n    id: 59,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"transformer\",\n    display: \"Transformer Fault Current\",\n    id: 60,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"DOL\",\n    display: \"DOL Star & Delta\",\n    id: 61,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"flowrate\",\n    display: \"Flow Rate Calculation\",\n    id: 62,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"hydrost\",\n    display: \"Hydrostatic Level\",\n    id: 63,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"orifice\",\n    display: \"Orifice Plate error\",\n    id: 64,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"lb\",\n    display: \"LbIn to Nm\",\n    id: 65,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"nm\",\n    display: \"Nm to LbIn\",\n    id: 66,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"dcmotor\",\n    display: \"DC Motor horsepower\",\n    id: 67,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"eff1\",\n    display: \"Eff Tension from HP & FPM\",\n    id: 68,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"eff2\",\n    display: \"Eff Tension from Torque and Radius\",\n    id: 69,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"Belt Length\",\n    display: \"Belt Length\",\n    id: 80,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    display: \"Color code Resistance\",\n    id: 30\n  }, {\n    name: \"\",\n    display: \"Gear Pump Displacement\",\n    id: 81,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Stroke's Law\",\n    id: 82,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Flow Velocity\",\n    id: 83,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Hooke's Law (Force)\",\n    id: 84,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Hooke's Law (Spring constant)\",\n    id: 85,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Strain\",\n    id: 86,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"K Value & Pipe Length\",\n    id: 87,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Young's modulus\",\n    id: 88,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Weber Number\",\n    id: 89,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Chezy Coefficient\",\n    id: 90,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Cauchy Number\",\n    id: 91,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }, {\n    name: \"\",\n    display: \"Bulk Modulus Elasticity\",\n    id: 92,\n    type: \"mechanical\",\n    category: \"electrical\"\n  }];\n  const paths = tools !== undefined && tools.map(post => ({\n    params: {\n      name: stringSpaceToHyphen(post.display)\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: false // See the \"fallback\" section below\n\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  // Pass post data to the page via props\n  return {\n    props: {\n      names: names,\n      toolType: toolType,\n      params: params\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}