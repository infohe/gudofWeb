{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nvar _jsxFileName = \"/home/fazna/gudofWeb/pages/Instrumentation/[name].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { names, toolType } from '../index';\nimport Navbar from '../Navbar';\nimport Head from 'next/head';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport { stringSpaceToHyphen } from '..';\nimport Slidertools from '../components/Slidertools';\nimport Zero from '../components/Zero';\nimport Functions from '../components/Functions';\nexport default function Instrumentation({\n  params,\n  functions,\n  toolType,\n  names\n}) {\n  const [visible, setVisible] = React.useState(false);\n\n  const showDrawer = () => {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  React.useEffect(() => {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n  const [question, setQuestion] = React.useState();\n  const [result, setResult] = React.useState(0);\n  let vari;\n  const [queryid, setQueryId] = React.useState();\n  const router = useRouter();\n  const [a, seta] = React.useState();\n  const [b, setb] = React.useState();\n  React.useEffect(() => {\n    if (router && router.query) {\n      setQueryId(router.query.name);\n      console.log(\"router\", router.query.id);\n    }\n  }, [router, router.query]);\n  const [display, setDisplay] = React.useState();\n  const [name, setName] = React.useState();\n  const [category, setCategory] = React.useState();\n  const [id, setId] = React.useState();\n  React.useEffect(() => {\n    if (queryid !== undefined) {\n      let item = names.find(item => stringSpaceToHyphen(item.display) === router.query.name);\n      setCategory(item.category);\n\n      if (functions.find(item => stringSpaceToHyphen(item.display) === router.query.name) !== undefined) {\n        let vari = functions.find(item => stringSpaceToHyphen(item.display) === router.query.name);\n        seta(vari.a);\n        setQuestion(vari.a);\n        setName(vari.name);\n        setb(vari.b);\n        setDisplay(vari.display);\n      }\n\n      setId(item.id);\n      console.log(\"id\", id);\n    }\n  }, [queryid]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, router.query.name, \" Instrumentation Tool\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), functions !== undefined && functions.map(item => stringSpaceToHyphen(item.display) === router.query.name && __jsx(\"meta\", {\n    key: \"description\",\n    name: \"description\",\n    content: item.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 14\n    }\n  }))), __jsx(Navbar, {\n    showDrawer: showDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"tools-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType,\n    onClose: () => setVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"tools-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType,\n    key2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, question !== undefined && category === \"instrumentation\" && __jsx(Slidertools, {\n    desc: \"\",\n    display: display,\n    a: a,\n    b: b,\n    res: result,\n    qn: question,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), category === \"electrical\" && __jsx(Functions, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 39\n    }\n  }), category === \"zero\" && __jsx(Zero, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }))));\n}\nexport async function getStaticPaths() {\n  const tools = [{\n    display: \"3-15 PSI\"\n  }, {\n    display: \"0-20 mA\"\n  }, {\n    display: \"4-20 mA\"\n  }, {\n    display: \"0-25 mA\"\n  }, {\n    display: \"0-X to % (Conversion)\"\n  }, {\n    display: \"Resistance (from temperature)\"\n  }, {\n    display: \"Linear mA to Square Root mA\"\n  }, {\n    display: \"Temperature (from resistance)\"\n  }, {\n    display: \"Temperature\"\n  }, {\n    display: \"Linear to Square Root percentage\"\n  }, {\n    display: \"Level measurement Two Seals\"\n  }, {\n    display: \"Level measurement one seal above\"\n  }, {\n    display: \"Level measurement one seal below\"\n  }, {\n    display: \"Bubble Level\"\n  }, {\n    display: \"Bubble Interface\"\n  }, {\n    display: \"Two Seal Interface\"\n  }, {\n    display: \"Open Tank\"\n  }, {\n    display: \"Interface Wet Leg\"\n  }, {\n    display: \"Liquid Purge\"\n  }, {\n    display: \"Level Transmission Closed Vessel\"\n  }, {\n    display: \"Flow Rate Calculation\"\n  }, {\n    display: \"Hydrostatic Level\"\n  }, {\n    display: \"Orifice Plate error\"\n  }];\n  const paths = tools !== undefined && tools.map(post => ({\n    params: {\n      name: stringSpaceToHyphen(post.display)\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: false // See the \"fallback\" section below\n\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = [{\n    stringId: \"1\",\n    a: 0,\n    b: 20,\n    name: \"mA\",\n    display: \"0-20 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"2\",\n    a: 4,\n    b: 20,\n    name: \"mA\",\n    display: \"4-20 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 4 to 20 milliamps, and display a 4-20mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"3\",\n    a: 0,\n    b: 25,\n    name: \"mA\",\n    display: \"0-25 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 25 milliamps, and display a 0-25mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"0\",\n    a: 3,\n    b: 15,\n    name: \"PSI\",\n    display: \"3-15 PSI\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"\n  }]; // Pass post data to the page via props\n\n  return {\n    props: {\n      functions: res,\n      names: names,\n      toolType: toolType,\n      params: params\n    }\n  };\n}","map":{"version":3,"sources":["/home/fazna/gudofWeb/pages/Instrumentation/[name].js"],"names":["useRouter","names","toolType","Navbar","Head","SideNav","DrawerNav","stringSpaceToHyphen","Slidertools","Zero","Functions","Instrumentation","params","functions","visible","setVisible","React","useState","showDrawer","window","innerWidth","onClose","useEffect","question","setQuestion","result","setResult","vari","queryid","setQueryId","router","a","seta","b","setb","query","name","console","log","id","display","setDisplay","setName","category","setCategory","setId","undefined","item","find","map","desc","getStaticPaths","tools","paths","post","fallback","getStaticProps","res","stringId","props"],"mappings":"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","sourcesContent":["\nimport {Layout} from 'antd'\nimport { useRouter } from 'next/router'\nimport {names,toolType} from '../index'\n\nimport Navbar from '../Navbar';\n\nimport Head from 'next/head'\nimport { Drawer } from 'antd';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport { stringSpaceToHyphen } from '..';\nimport Slidertools from '../components/Slidertools';\nimport Zero from '../components/Zero';\nimport Functions from '../components/Functions'\n\nexport default function Instrumentation({params,functions,toolType,names}){\n  const [visible, setVisible] = React.useState(false);\n  const showDrawer = () => {\n    if(window.innerWidth<=700)\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n  React.useEffect(()=>{\n    if(window.innerWidth>700)\n      setVisible(false)\n  })\n    const [question,setQuestion] = React.useState();\n\n    const [result,setResult] = React.useState(0);\n\n    let vari;\n    const [queryid,setQueryId] = React.useState()\n    const router = useRouter()\n  \n      const [a,seta] = React.useState()\n      const [b,setb] = React.useState()\n\n     \n     \n      \n      React.useEffect(()=> {\n        if(router && router.query) {\n          setQueryId(router.query.name)\n          console.log(\"router\",router.query.id)\n         \n        }\n      }, [router,router.query])\n      const [display,setDisplay] = React.useState()\n      const [name,setName]= React.useState();\n      const [category,setCategory] = React.useState()\n      const [id,setId] = React.useState()\nReact.useEffect(()=>{\n        if(queryid!==undefined){\n          let item = names.find(item=> stringSpaceToHyphen(item.display) === router.query.name)\n          setCategory(item.category)\n\n          if(functions.find(item=> stringSpaceToHyphen(item.display) === router.query.name )!== undefined)\n            {\n              let vari = functions.find(item=> stringSpaceToHyphen(item.display) === router.query.name )\n            \n            seta(vari.a)\n            setQuestion(vari.a)\n            setName(vari.name)\n            setb(vari.b)\n            setDisplay(vari.display)}\n            \n           setId(item.id)\n            \n            console.log(\"id\",id)\n          }\n      },[queryid])\n\n\n     \n    \n    return(\n      <div>\n        <Head>\n          <title>{router.query.name} Instrumentation Tool</title>\n          <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"/>\n          \n          {functions!==undefined && functions.map(item => stringSpaceToHyphen(item.display) === router.query.name\n          && <meta key=\"description\" name=\"description\"content={item.desc}/>) }\n        </Head>\n        <Navbar showDrawer={showDrawer}/>\n\n    \n        <div className=\"tools-container\">\n            {/* sliding drawer */}\n            <Drawer width={350} title=\"gudofConvert\" placement=\"left\" closable={true} onClose={onClose} visible={visible}>\n              <DrawerNav names={names} toolType={toolType} onClose={()=>setVisible(false)}/>\n            </Drawer>\n\n            {/* fixed side menu */}\n            <div className=\"tools-left\">\n              <SideNav names={names} toolType={toolType} key2={\"1\"}/>\n            </div>\n\n            {/* toolpart */}\n            <Layout className=\"toolbox-layout\">\n                {question!==undefined && category===\"instrumentation\" &&\n                    <Slidertools desc=\"\" display={display} a={a} b={b} res={result} qn={question} name={name}/>\n                }\n                {category===\"electrical\" &&\n                                      <Functions id={id}/>}\n                {category===\"zero\" &&\n                  <Zero/>\n}\n                \n               </Layout>\n           </div>\n        </div>\n    )\n}\n\nexport async function getStaticPaths() {\n  const tools= [{display:\"3-15 PSI\"},\n  {display:\"0-20 mA\"},\n  {display:\"4-20 mA\"},\n  {display:\"0-25 mA\"},\n  {display:\"0-X to % (Conversion)\"},\n  {display:\"Resistance (from temperature)\"},\n  {display:\"Linear mA to Square Root mA\"},\n  {display:\"Temperature (from resistance)\"},\n  {display:\"Temperature\"},\n{display:\"Linear to Square Root percentage\"},\n{display:\"Level measurement Two Seals\"},\n{display:\"Level measurement one seal above\"},\n{display:\"Level measurement one seal below\"},\n{display:\"Bubble Level\"},\n{display:\"Bubble Interface\"},\n{display:\"Two Seal Interface\"},\n{display:\"Open Tank\"},\n{display:\"Interface Wet Leg\"},\n{display:\"Liquid Purge\"},\n{display:\"Level Transmission Closed Vessel\"},\n{display:\"Flow Rate Calculation\"},\n{display:\"Hydrostatic Level\"},\n{display:\"Orifice Plate error\"},\n]\n\n  const paths = tools!==undefined && tools.map((post) => ({\n    params: {name :stringSpaceToHyphen(post.display) }\n  }))\n  \n    return {\n        paths: paths, fallback: false // See the \"fallback\" section below\n    };\n  }\n  export async function getStaticProps({ params }) {\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    const res = [\n      {stringId:\"1\",a:0,b:20,name:\"mA\",display:\"0-20 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"},\n      {stringId:\"2\",a:4,b:20,name:\"mA\",display:\"4-20 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 4 to 20 milliamps, and display a 4-20mA conversion scale for the chosen measurement range.\"},\n      {stringId:\"3\",a:0,b:25,name:\"mA\",display:\"0-25 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 25 milliamps, and display a 0-25mA conversion scale for the chosen measurement range.\"},\n      {stringId:\"0\",a:3,b:15,name:\"PSI\",display:\"3-15 PSI\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"},\n    ]\n      \n    \n                      \n    // Pass post data to the page via props\n    return { props: { functions:res ,names:names,toolType:toolType ,params:params} }\n  }\n  "]},"metadata":{},"sourceType":"module"}