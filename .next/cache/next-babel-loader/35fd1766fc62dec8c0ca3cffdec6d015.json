{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/home/fazna/gudofWeb/pages/conversion/[name].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport Navbar from '../Navbar';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { stringSpaceToHyphen } from '..';\n\nconst Conversion = ({\n  names,\n  toolType\n}) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showDrawer = () => {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  React.useEffect(() => {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n  const router = useRouter();\n  const {\n    Option\n  } = _Select;\n\n  const isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  const [input1, setInput1] = React.useState();\n  const [input2, setInput2] = React.useState();\n  const [inn, setIn] = React.useState();\n  const [out, setOut] = React.useState();\n\n  const roundIt = (num, X) => {\n    X = !X ? 6 : X;\n    return Math.round(num * Math.pow(10, X)) / Math.pow(10, X);\n  };\n\n  const [answer, setAnswer] = React.useState(); // Indicate that name should be a public property on the component\n\n  const compute = function (current_conversion, conversion_calc, in_out) {\n    let value; //varvalue=current_conversion\n\n    if (in_out === 'in') {\n      console.log(input1);\n      value = input1;\n    } else {\n      value = input2;\n    }\n\n    console.log(in_out);\n    console.log(\"value\", value, \"inout\", in_out);\n    var first = inn;\n    var second = out;\n    var array = conversion_calc[current_conversion];\n    console.log(\"current converdion\", first);\n    var oneUnitFrom = array[first];\n    var oneUnitTo = array[second]; //Convert \"From\" units to base unit of category ie. celcius to Kelvin\n\n    if (isNumber(oneUnitFrom.scale)) {\n      value = value * oneUnitFrom.scale;\n    } else {\n      value = oneUnitFrom.scale(value);\n    }\n\n    console.log(\"oneUnitFrom.scale-val1:\" + value); //Next Convert into \"To\" units from the base unit of category ie. kelvin to fahrenheit\n\n    if (isNumber(oneUnitTo.scale)) {\n      value = value / oneUnitTo.scale;\n    } else {\n      value = oneUnitTo.scaleFrom(value);\n    }\n\n    console.log(\"oneUnitFrom.scale-val2:\" + value);\n\n    if (oneUnitTo.decimal !== undefined) {\n      value = roundIt(value, oneUnitTo.decimal);\n    }\n\n    return value;\n  };\n\n  const descriptions = [{\n    name: \"area\",\n    descp: \"\"\n  }, {\n    name: \"force\",\n    descp: \"\"\n  }, {\n    name: \"energy\",\n    descp: \"\"\n  }, {\n    name: \"fuel_consumption\",\n    descp: \"\"\n  }, {\n    name: \"time\",\n    descp: \"\"\n  }, {\n    name: \"mass\",\n    descp: \"\"\n  }, {\n    name: \"length\",\n    descp: \"\"\n  }, {\n    name: \"digital_storage\",\n    descp: \"\"\n  }, {\n    name: \"temperature\",\n    descp: \"\"\n  }, {\n    name: \"current\",\n    descp: \"\"\n  }, {\n    name: \"pressure\",\n    descp: \"\"\n  }, {\n    name: \"speed\",\n    descp: \"\"\n  }, {\n    name: \"power\",\n    descp: \"\"\n  }, {\n    name: \"charge\",\n    descp: \"\"\n  }];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, router.query.name), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), descriptions.map(item => item.name === router.query.name && __jsx(\"meta\", {\n    key: \"description\",\n    name: \"description\",\n    content: item.descp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 8\n    }\n  }))), __jsx(Navbar, {\n    showDrawer: showDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }\n  }), __jsx(\"div\", {\n    className: \"tools-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType,\n    onClose: () => setVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"tools-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, router.query.id !== undefined && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }, __jsx(_Row, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"toolbox-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, conversion_fn[conversion_fn.findIndex(item => item.id === router.query.id)].name)), __jsx(\"hr\", {\n    className: \"hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }\n  }), __jsx(\"div\", {\n    className: \"toolbox-calc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"CAlculation\"), __jsx(_Row, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(_Col, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    style: {\n      border: \"1px solid gray\"\n    },\n    className: \"input box\",\n    class: \"box\",\n    value: input1,\n    onChange: e => {\n      console.log(\"input\", e.target.value);\n      setInput1(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }\n  })), __jsx(_Col, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    style: {\n      border: \"1px solid gray\"\n    },\n    className: \"input box\",\n    class: \"box\",\n    value: inn,\n    onSelect: e => {\n      setIn(e);\n      console.log(e);\n    },\n    placeholder: \"Input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }\n  }, conversion_fn[conversion_fn.findIndex(item => item.id === router.query.id)].units.map(item => __jsx(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, item.name))))), __jsx(_Row, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(_Col, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    style: {\n      border: \"1px solid gray\"\n    },\n    className: \"input box\",\n    class: \"box\",\n    value: answer,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 31\n    }\n  })), __jsx(_Col, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    className: \"input box\",\n    style: {\n      border: \"1px solid gray\"\n    },\n    class: \"box\",\n    value: out,\n    onSelect: e => {\n      setOut(e);\n    },\n    placeholder: \"Output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 1\n    }\n  }, conversion_fn[conversion_fn.findIndex(item => item.id === router.query.id)].units.map(item => __jsx(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 1\n    }\n  }, item.name))))), __jsx(_Button, {\n    className: \"calculate-button\",\n    onClick: () => {\n      setAnswer(compute(conversion_fn[conversion_fn.findIndex(item => item.id === router.query.id)].id, conversion_calc, 'in'));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, \"Convert\")), __jsx(\"hr\", {\n    className: \"hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }\n  }), answer !== undefined && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"toolbox-calc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"RESULT\"), input1, \" \", inn, \" =\", answer, \" \", out))))));\n};\n\nexport default Conversion;\nexport const conversion_calc = {\n  \"temperature\": {\n    \"celsius\": {\n      \"scale\": function (value) {\n        value = parseInt(value);\n        return value + 273.15;\n      },\n      \"scaleFrom\": function (value) {\n        value = parseInt(value);\n        return value - 273.15;\n      },\n      \"symbol\": \"\",\n      \"name\": \"Celsius\"\n    },\n    \"fahrenheit\": {\n      \"scale\": function (value) {\n        value = parseInt(value);\n        return 5 / 9 * (value + 459.67);\n      },\n      \"scaleFrom\": function (value) {\n        value = parseInt(value);\n        return 9 / 5 * value - 459.67;\n      },\n      \"symbol\": \"\",\n      \"name\": \"Fahrenheit\"\n    },\n    \"kelvin\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Kelvin\"\n    }\n  },\n  \"pressure\": {\n    \"atm\": {\n      \"scale\": 1 / 0.986923,\n      \"symbol\": \"\",\n      \"name\": \"Atmosphere\"\n    },\n    \"b\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"bar\"\n    },\n    \"dcm\": {\n      \"scale\": 1 / 1000000,\n      \"symbol\": \"\",\n      \"name\": \"dynes/cm2\"\n    },\n    \"ihg\": {\n      \"scale\": 1 / 29.9213,\n      \"symbol\": \"\",\n      \"name\": \"in. Hg\"\n    },\n    \"iw\": {\n      \"scale\": 1 / 401.46307866999996,\n      \"symbol\": \"\",\n      \"name\": \"in. water\"\n    },\n    \"k\": {\n      \"scale\": 1 / 1.019716213,\n      \"symbol\": \"\",\n      \"name\": \"kg/cm2\"\n    },\n    \"m\": {\n      \"scale\": 1 / 1000,\n      \"symbol\": \"\",\n      \"name\": \"mbar\"\n    },\n    \"mtm\": {\n      \"scale\": 1 / 750061.673821,\n      \"symbol\": \"\",\n      \"name\": \"mtorr or micron\"\n    },\n    \"pnm\": {\n      \"scale\": 1 / 100000,\n      \"symbol\": \"\",\n      \"name\": \"Pa or N/m2\"\n    },\n    \"kpa\": {\n      \"scale\": 1 / 100,\n      \"symbol\": \"\",\n      \"name\": \"KPa\"\n    },\n    \"psi\": {\n      \"scale\": 1 / 14.50377,\n      \"symbol\": \"\",\n      \"name\": \"PSI or lb/in2\"\n    }\n  },\n  \"charge\": {\n    \"c\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Coulomb\"\n    },\n    \"milli\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"milliCoulomb\"\n    },\n    \"micro\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"microCoulomb\"\n    },\n    \"nano\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"nanoCoulomb\"\n    },\n    \"pico\": {\n      \"scale\": 10 ** 12,\n      \"symbol\": \"\",\n      \"name\": \"picoCoulomb\"\n    },\n    \"e\": {\n      \"scale\": 6.24150975e+18,\n      \"symbol\": \"\",\n      \"name\": \"e Charge\"\n    },\n    \"amp\": {\n      \"scale\": 0.0002777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Ampere Hours\"\n    }\n  },\n  \"length\": {\n    \"kilometer\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilometer\"\n    },\n    \"meters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Meters\"\n    },\n    \"centimeters\": {\n      \"scale\": 0.01,\n      \"symbol\": \"\",\n      \"name\": \"Centimeters\"\n    },\n    \"millimeters\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Millimeters\"\n    },\n    \"miles\": {\n      \"scale\": 1609.344,\n      \"symbol\": \"\",\n      \"name\": \"Miles\"\n    },\n    \"yards\": {\n      \"scale\": 0.9144,\n      \"symbol\": \"\",\n      \"name\": \"Yards\"\n    },\n    \"feet\": {\n      \"scale\": 0.3048006096012192,\n      \"symbol\": \"\",\n      \"name\": \"Feet\"\n    },\n    \"inches\": {\n      \"scale\": 0.0254,\n      \"symbol\": \"\",\n      \"name\": \"Inches\"\n    },\n    \"nauticalMiles\": {\n      \"scale\": 1852,\n      \"symbol\": \"\",\n      \"name\": \"Nautical Miles\"\n    }\n  },\n  \"mass\": {\n    \"metricTon\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Metric Ton\"\n    },\n    \"kilogram\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram\"\n    },\n    \"gram\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Gram\"\n    },\n    \"milligram\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Milligram\"\n    },\n    \"mcg\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Mcg\"\n    },\n    \"longTon\": {\n      \"scale\": 1016.0469088,\n      \"symbol\": \"\",\n      \"name\": \"Long Ton\"\n    },\n    \"shortTon\": {\n      \"scale\": 907.18474,\n      \"symbol\": \"\",\n      \"name\": \"Short Ton\"\n    },\n    \"stones\": {\n      \"scale\": 6.35029318,\n      \"symbol\": \"\",\n      \"name\": \"Stones\"\n    },\n    \"pound\": {\n      \"scale\": 0.45359237,\n      \"symbol\": \"\",\n      \"name\": \"Pound\"\n    },\n    \"ounce\": {\n      \"scale\": 0.028349523125,\n      \"symbol\": \"\",\n      \"name\": \"Ounce\"\n    }\n  },\n  \"speed\": {\n    \"milesHour\": {\n      \"scale\": 0.44704,\n      \"symbol\": \"\",\n      \"name\": \"Miles/Hour\"\n    },\n    \"feetSec\": {\n      \"scale\": 0.3048,\n      \"symbol\": \"\",\n      \"name\": \"Feet/Sec\"\n    },\n    \"metersSec\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Meters/Sec\"\n    },\n    \"kmHour\": {\n      \"scale\": 0.2777777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Km/Hour\"\n    },\n    \"knots\": {\n      \"scale\": 0.5144444444444445,\n      \"symbol\": \"\",\n      \"name\": \"Knots\"\n    }\n  },\n  \"volume\": {\n    \"usGal\": {\n      \"scale\": 3.785411784,\n      \"symbol\": \"\",\n      \"name\": \"US Gal\"\n    },\n    \"usQuart\": {\n      \"scale\": 0.946352946,\n      \"symbol\": \"\",\n      \"name\": \"US Quart\"\n    },\n    \"usPint\": {\n      \"scale\": 0.473176473,\n      \"symbol\": \"\",\n      \"name\": \"US Pint\"\n    },\n    \"usCup\": {\n      \"scale\": 0.2365882365,\n      \"symbol\": \"\",\n      \"name\": \"US Cup\"\n    },\n    \"usOz\": {\n      \"scale\": 0.0295735295625,\n      \"symbol\": \"\",\n      \"name\": \"US Oz\"\n    },\n    \"usTbsp\": {\n      \"scale\": 0.01478676478125,\n      \"symbol\": \"\",\n      \"name\": \"US Tbsp.\"\n    },\n    \"usTsp\": {\n      \"scale\": 0.00492892159375,\n      \"symbol\": \"\",\n      \"name\": \"US Tsp.\"\n    },\n    \"cubicMeter\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Meter\"\n    },\n    \"liters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Liters\"\n    },\n    \"milliliter\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliliter\"\n    },\n    \"imperialGal\": {\n      \"scale\": 4.54609,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Gal\"\n    },\n    \"imperialQuart\": {\n      \"scale\": 1.1365225,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Quart\"\n    },\n    \"imperialPint\": {\n      \"scale\": 0.56826125,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Pint\"\n    },\n    \"imperialOz\": {\n      \"scale\": 0.0284130625,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Oz\"\n    },\n    \"imperialTbsp\": {\n      \"scale\": 0.0177582,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Tbsp.\"\n    },\n    \"imperialTsp\": {\n      \"scale\": 0.00591939,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Tsp.\"\n    },\n    \"cubicFoot\": {\n      \"scale\": 28.316846592,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Foot\"\n    },\n    \"cubicInch\": {\n      \"scale\": 0.016387064,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Inch\"\n    }\n  },\n  \"area\": {\n    \"squareKm\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Square Km\"\n    },\n    \"hectare\": {\n      \"scale\": 10000,\n      \"symbol\": \"\",\n      \"name\": \"Hectare\"\n    },\n    \"squareMeter\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Square Meter\"\n    },\n    \"squareMile\": {\n      \"scale\": 2589988.110336,\n      \"symbol\": \"\",\n      \"name\": \"Square Mile\"\n    },\n    \"acre\": {\n      \"scale\": 4046.8564224,\n      \"symbol\": \"\",\n      \"name\": \"Acre\"\n    },\n    \"squareYard\": {\n      \"scale\": 0.83612736,\n      \"symbol\": \"\",\n      \"name\": \"Square Yard\"\n    },\n    \"squareFoot\": {\n      \"scale\": 0.09290304,\n      \"symbol\": \"\",\n      \"name\": \"Square Foot\"\n    },\n    \"squareInch\": {\n      \"scale\": 0.00064516,\n      \"symbol\": \"\",\n      \"name\": \"Square Inch\"\n    }\n  },\n  \"fuel_consumption\": {\n    \"mpgUs\": {\n      \"scale\": function (value) {\n        return 2.3521458333333333333333333333333e-3 / value;\n      },\n      \"scaleFrom\": function (value) {\n        return 2.3521458333333333333333333333333e-3 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"MPG (US)\"\n    },\n    \"mpgImp\": {\n      \"scale\": function (value) {\n        return 2.8248093633182215859381213711925e-3 / value;\n      },\n      \"scaleFrom\": function (value) {\n        return 2.8248093633182215859381213711925e-3 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"MPG (imp.)\"\n    },\n    \"kmLiter\": {\n      \"scale\": function (value) {\n        return 0.001 / value;\n      },\n      \"scaleFrom\": function (value) {\n        return 0.001 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"Km/Liter\"\n    },\n    \"liter100km\": {\n      \"scale\": 0.00001,\n      \"symbol\": \"\",\n      \"name\": \"Liter/100km\"\n    }\n  },\n  \"time\": {\n    \"nanoseconds\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Nanoseconds\"\n    },\n    \"microseconds\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Microseconds\"\n    },\n    \"milliseconds\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliseconds\"\n    },\n    \"seconds\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Seconds\"\n    },\n    \"minutes\": {\n      \"scale\": 60,\n      \"symbol\": \"\",\n      \"name\": \"Minutes\"\n    },\n    \"hours\": {\n      \"scale\": 3600,\n      \"symbol\": \"\",\n      \"name\": \"Hours\"\n    },\n    \"days\": {\n      \"scale\": 86400,\n      \"symbol\": \"\",\n      \"name\": \"Days\"\n    },\n    \"weeks\": {\n      \"scale\": 604800,\n      \"symbol\": \"\",\n      \"name\": \"Weeks\"\n    },\n    \"months\": {\n      \"scale\": 2628000,\n      \"symbol\": \"\",\n      \"name\": \"Months\"\n    },\n    \"years\": {\n      \"scale\": 31536000,\n      \"symbol\": \"\",\n      \"name\": \"Years\"\n    },\n    \"decades\": {\n      \"scale\": 315360000,\n      \"symbol\": \"\",\n      \"name\": \"Decades\"\n    },\n    \"century\": {\n      \"scale\": 3.1689e-10,\n      \"symbol\": \"\",\n      \"name\": \"Century\"\n    }\n  },\n  \"digital_storage\": {\n    \"bits\": {\n      \"scale\": 0.125,\n      \"symbol\": \"\",\n      \"name\": \"Bits\"\n    },\n    \"bytes\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Bytes\"\n    },\n    \"kilobits\": {\n      \"scale\": 128,\n      \"symbol\": \"\",\n      \"name\": \"Kilobits\"\n    },\n    \"kilobytes\": {\n      \"scale\": 1024,\n      \"symbol\": \"\",\n      \"name\": \"Kilobytes\"\n    },\n    \"megabits\": {\n      \"scale\": 131072,\n      \"symbol\": \"\",\n      \"name\": \"Megabits\"\n    },\n    \"megabytes\": {\n      \"scale\": 1048576,\n      \"symbol\": \"\",\n      \"name\": \"Megabytes\"\n    },\n    \"gigabits\": {\n      \"scale\": 134217728,\n      \"symbol\": \"\",\n      \"name\": \"Gigabits\"\n    },\n    \"gigabytes\": {\n      \"scale\": 1073741824,\n      \"symbol\": \"\",\n      \"name\": \"Gigabytes\"\n    },\n    \"terabits\": {\n      \"scale\": 137438953472,\n      \"symbol\": \"\",\n      \"name\": \"Terabits\"\n    },\n    \"terabytes\": {\n      \"scale\": 1099511627776,\n      \"symbol\": \"\",\n      \"name\": \"Terabytes\"\n    },\n    \"petabits\": {\n      \"scale\": 140737488355328,\n      \"symbol\": \"\",\n      \"name\": \"Petabits\"\n    },\n    \"petabytes\": {\n      \"scale\": 1125899906842624,\n      \"symbol\": \"\",\n      \"name\": \"Petabytes\"\n    },\n    \"exabits\": {\n      \"scale\": 144115188075855870,\n      \"symbol\": \"\",\n      \"name\": \"Exabits\"\n    },\n    \"exabytes\": {\n      \"scale\": 1152921504606847000,\n      \"symbol\": \"\",\n      \"name\": \"Exabytes\"\n    }\n  },\n  \"energy\": {\n    \"btuTh\": {\n      \"scale\": 1054.35,\n      \"symbol\": \"\",\n      \"name\": \"Btu (th)\"\n    },\n    \"btuMean\": {\n      \"scale\": 1055.87,\n      \"symbol\": \"\",\n      \"name\": \"Btu (mean)\"\n    },\n    \"caloriesIt\": {\n      \"scale\": 4.1868,\n      \"symbol\": \"\",\n      \"name\": \"Calories (IT)\"\n    },\n    \"caloriesTh\": {\n      \"scale\": 4.184,\n      \"symbol\": \"\",\n      \"name\": \"Calories (th)\"\n    },\n    \"caloriesMean\": {\n      \"scale\": 4.19002,\n      \"symbol\": \"\",\n      \"name\": \"Calories (mean)\"\n    },\n    \"calories15c\": {\n      \"scale\": 4.1858,\n      \"symbol\": \"\",\n      \"name\": \"Calories (15C)\"\n    },\n    \"calories20c\": {\n      \"scale\": 4.1819,\n      \"symbol\": \"\",\n      \"name\": \"Calories (20C)\"\n    },\n    \"caloriesFood\": {\n      \"scale\": 4186,\n      \"symbol\": \"\",\n      \"name\": \"Calories (food)\"\n    },\n    \"centigradeHeatUnits\": {\n      \"scale\": 1900.4,\n      \"symbol\": \"\",\n      \"name\": \"Centigrade Heat Units\"\n    },\n    \"electronVolts\": {\n      \"scale\": 1.60219e-19,\n      \"symbol\": \"\",\n      \"name\": \"Electron Volts\"\n    },\n    \"ergs\": {\n      \"scale\": 1e-7,\n      \"symbol\": \"\",\n      \"name\": \"Ergs\"\n    },\n    \"footPoundForce\": {\n      \"scale\": 1.3558179483314003,\n      \"symbol\": \"\",\n      \"name\": \"Foot-Pound Force\"\n    },\n    \"footPoundals\": {\n      \"scale\": 0.04214,\n      \"symbol\": \"\",\n      \"name\": \"Foot Poundals\"\n    },\n    \"gigajoules\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigajoules\"\n    },\n    \"horsepowerHours\": {\n      \"scale\": 2684520,\n      \"symbol\": \"\",\n      \"name\": \"Horsepower Hours\"\n    },\n    \"inchPoundForce\": {\n      \"scale\": 0.11298482902761668,\n      \"symbol\": \"\",\n      \"name\": \"Inch-Pound Force\"\n    },\n    \"joules\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Joules\"\n    },\n    \"kilocaloriesIt\": {\n      \"scale\": 4186.8,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories (IT)\"\n    },\n    \"kilocaloriesTh\": {\n      \"scale\": 4184,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories (th)\"\n    },\n    \"kilogramForceMeters\": {\n      \"scale\": 9.80665,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters\"\n    },\n    \"kilojoules\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilojoules\"\n    },\n    \"kilowattHours\": {\n      \"scale\": 3600000,\n      \"symbol\": \"\",\n      \"name\": \"Kilowatt Hours\"\n    },\n    \"megajoules\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megajoules\"\n    },\n    \"newtonMeters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Newton Meters\"\n    },\n    \"therms\": {\n      \"scale\": 105505585.257348,\n      \"symbol\": \"\",\n      \"name\": \"Therms\"\n    },\n    \"wattSeconds\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watt Seconds\"\n    },\n    \"wattHours\": {\n      \"scale\": 3600,\n      \"symbol\": \"\",\n      \"name\": \"Watt Hours\"\n    }\n  },\n  \"power\": {\n    \"watts\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watts\"\n    },\n    \"kilowatts\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilowatts\"\n    },\n    \"megawatts\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megawatts\"\n    },\n    \"gigawatts\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigawatts\"\n    },\n    \"btuHour\": {\n      \"scale\": 0.293071,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Hour\"\n    },\n    \"btuMinute\": {\n      \"scale\": 17.584267,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Minute\"\n    },\n    \"btuSecond\": {\n      \"scale\": 1055.056,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Second\"\n    },\n    \"caloriesthHour\": {\n      \"scale\": 0.001162222222222222,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Hour\"\n    },\n    \"caloriesthMinute\": {\n      \"scale\": 0.06973333333333333,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Minute\"\n    },\n    \"caloriesthSecond\": {\n      \"scale\": 4.184,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Second\"\n    },\n    \"kilocaloriesthHour\": {\n      \"scale\": 1.1622222222222223,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories(th)/Hour\"\n    },\n    \"kilocaloriesthMinute\": {\n      \"scale\": 69.73333333333333,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories(th)/Minute\"\n    },\n    \"footPoundsForceMinute\": {\n      \"scale\": 0.022597,\n      \"symbol\": \"\",\n      \"name\": \"Foot Pounds-Force/Minute\"\n    },\n    \"footPoundsForceSecond\": {\n      \"scale\": 1.35582,\n      \"symbol\": \"\",\n      \"name\": \"Foot Pounds-Force/Second\"\n    },\n    \"horsepowersElectric\": {\n      \"scale\": 746,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (electric)\"\n    },\n    \"horsepowersInternational\": {\n      \"scale\": 745.6998715822702,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (international)\"\n    },\n    \"horsepowersWater\": {\n      \"scale\": 746.043,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (water)\"\n    },\n    \"horsepowersMetric\": {\n      \"scale\": 735.4988,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (metric)\"\n    },\n    \"joulesHour\": {\n      \"scale\": 0.0002777777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Hour\"\n    },\n    \"joulesMinute\": {\n      \"scale\": 0.016666666666666666,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Minute\"\n    },\n    \"joulesSecond\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Second\"\n    },\n    \"kilogramForceMetersHour\": {\n      \"scale\": 0.002724,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters/Hour\"\n    },\n    \"kilogramForceMetersMinute\": {\n      \"scale\": 0.163444,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters/Minute\"\n    }\n  },\n  \"force\": {\n    \"newtons\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Newtons\"\n    },\n    \"kilonewtons\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilonewtons\"\n    },\n    \"meganewtons\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Meganewtons\"\n    },\n    \"dynes\": {\n      \"scale\": 0.00001,\n      \"symbol\": \"\",\n      \"name\": \"Dynes\"\n    },\n    \"kilogramsForce\": {\n      \"scale\": 9.80665,\n      \"symbol\": \"\",\n      \"name\": \"Kilograms Force\"\n    },\n    \"kips\": {\n      \"scale\": 4448.222,\n      \"symbol\": \"\",\n      \"name\": \"Kips\"\n    },\n    \"poundsForce\": {\n      \"scale\": 4.4482216152605,\n      \"symbol\": \"\",\n      \"name\": \"Pounds Force\"\n    },\n    \"poundals\": {\n      \"scale\": 0.138255,\n      \"symbol\": \"\",\n      \"name\": \"Poundals\"\n    },\n    \"sthenes=kn\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Sthenes (=kN)\"\n    },\n    \"tonnesForce\": {\n      \"scale\": 9806.65,\n      \"symbol\": \"\",\n      \"name\": \"Tonnes Force\"\n    },\n    \"tonsForceUk\": {\n      \"scale\": 9964.01641818352,\n      \"symbol\": \"\",\n      \"name\": \"Tons Force (UK)\"\n    },\n    \"tonsForceUs\": {\n      \"scale\": 8896.443230521,\n      \"symbol\": \"\",\n      \"name\": \"Tons Force (US)\"\n    }\n  },\n  \"electric_current\": {\n    \"abampere\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"Abampere\"\n    },\n    \"ampere\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Ampere\"\n    },\n    \"biot\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"Biot\"\n    },\n    \"centiampere\": {\n      \"scale\": 0.01,\n      \"symbol\": \"\",\n      \"name\": \"Centiampere\"\n    },\n    \"coulombSecond\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Coulomb/Second\"\n    },\n    \"emuOfCurrent\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"EMU Of Current\"\n    },\n    \"esuOfCurrent\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"ESU Of Current\"\n    },\n    \"franklinSecond\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Franklin/Second\"\n    },\n    \"gaussianElectricCurrent\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Gaussian Electric Current\"\n    },\n    \"gigaampere\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigaampere\"\n    },\n    \"gilbert\": {\n      \"scale\": 0.79577472,\n      \"symbol\": \"\",\n      \"name\": \"Gilbert\"\n    },\n    \"kiloampere\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kiloampere\"\n    },\n    \"megaampere\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megaampere\"\n    },\n    \"microampere\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Microampere\"\n    },\n    \"milliampere\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliampere\"\n    },\n    \"milliamp\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliamp\"\n    },\n    \"manoampere\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Manoampere\"\n    },\n    \"picoampere\": {\n      \"scale\": 1e-12,\n      \"symbol\": \"\",\n      \"name\": \"Picoampere\"\n    },\n    \"siemensVolt\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Siemens Volt\"\n    },\n    \"statampere\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Statampere\"\n    },\n    \"teraampere\": {\n      \"scale\": 1000000000000,\n      \"symbol\": \"\",\n      \"name\": \"Teraampere\"\n    },\n    \"voltOhm\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Volt/Ohm\"\n    },\n    \"wattVolt\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watt/Volt\"\n    },\n    \"weberHenry\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Weber/Henry\"\n    }\n  }\n}; //conversion array list for input\n\nexport const conversion_fn = [{\n  id: \"pressure\",\n  type: \"general\",\n  name: \"Pressure\",\n  // in: 1,\n  from: {\n    name: \"Atmosphere\",\n    id: \"atm\"\n  },\n  to: {\n    name: \"bar\",\n    id: \"b\"\n  },\n  units: [{\n    name: \"Atmosphere\",\n    id: \"atm\"\n  }, {\n    name: \"bar\",\n    id: \"b\"\n  }, {\n    name: \"dynes/cm2\",\n    id: \"dcm\"\n  }, {\n    name: \"in. Hg\",\n    id: \"ihg\"\n  }, {\n    name: \"in. water\",\n    id: \"iw\"\n  }, {\n    name: \"kg/cm2\",\n    id: \"k\"\n  }, {\n    name: \"mbar\",\n    id: \"m\"\n  }, {\n    name: \"mtorr or micron\",\n    id: \"mtm\"\n  }, {\n    name: \"Pa or N/m2\",\n    id: \"pnm\"\n  }, {\n    name: \"KPa\",\n    id: \"kpa\"\n  }, {\n    name: \"PSI or lb/in2\",\n    id: \"psi\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"charge\",\n  type: \"general\",\n  name: \"Charge\",\n  // in: 1,\n  from: {\n    name: \"Coulomb\",\n    id: \"c\"\n  },\n  to: {\n    name: \"Milli Coulomb\",\n    id: \"milli\"\n  },\n  units: [{\n    name: \"Coulomb\",\n    id: \"c\"\n  }, {\n    name: \"Milli Coulomb\",\n    id: \"milli\"\n  }, {\n    name: \"Micro Coulomb\",\n    id: \"micro\"\n  }, {\n    name: \"Nano Coulomb\",\n    id: \"nano\"\n  }, {\n    name: \"pico Coulomb\",\n    id: \"pico\"\n  }, {\n    name: \"e Charge\",\n    id: \"e\"\n  }, {\n    name: \"Ampere Hours\",\n    id: \"amp\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"temperature\",\n  type: \"general\",\n  name: \"Temperature\",\n  from: {\n    name: \"Celsius\",\n    id: \"celsius\"\n  },\n  to: {\n    name: \"Fahrenheit\",\n    id: \"fahrenheit\"\n  },\n  units: [{\n    name: \"Celsius\",\n    id: \"celsius\"\n  }, {\n    name: \"Fahrenheit\",\n    id: \"fahrenheit\"\n  }, {\n    name: \"Kelvin\",\n    id: \"kelvin\"\n  }]\n}, {\n  id: \"length\",\n  type: \"general\",\n  name: \"Length\",\n  from: {\n    name: \"Kilometer\",\n    id: \"kilometer\"\n  },\n  to: {\n    name: \"Meters\",\n    id: \"meters\"\n  },\n  units: [{\n    name: \"Kilometer (km)\",\n    id: \"kilometer\"\n  }, {\n    name: \"Meters (m)\",\n    id: \"meters\"\n  }, {\n    name: \"Centimeters (cm)\",\n    id: \"centimeters\"\n  }, {\n    name: \"Millimeters (mm)\",\n    id: \"millimeters\"\n  }, {\n    name: \"Miles\",\n    id: \"miles\"\n  }, {\n    name: \"Yards\",\n    id: \"yards\"\n  }, {\n    name: \"Feet\",\n    id: \"feet\"\n  }, {\n    name: \"Inches\",\n    id: \"inches\"\n  }, {\n    name: \"Nautical Miles\",\n    id: \"nauticalMiles\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"mass\",\n  type: \"general\",\n  name: \"Mass\",\n  from: {\n    name: \"Metric Ton\",\n    id: \"metricTon\"\n  },\n  to: {\n    name: \"Kilogram\",\n    id: \"kilogram\"\n  },\n  units: [{\n    name: \"Metric Ton\",\n    id: \"metricTon\"\n  }, {\n    name: \"Kilogram\",\n    id: \"kilogram\"\n  }, {\n    name: \"Gram\",\n    id: \"gram\"\n  }, {\n    name: \"Milligram\",\n    id: \"milligram\"\n  }, {\n    name: \"Mcg\",\n    id: \"mcg\"\n  }, {\n    name: \"Long Ton\",\n    id: \"longTon\"\n  }, {\n    name: \"Short Ton\",\n    id: \"shortTon\"\n  }, {\n    name: \"Stones\",\n    id: \"stones\"\n  }, {\n    name: \"Pound\",\n    id: \"pound\"\n  }, {\n    name: \"Ounce\",\n    id: \"ounce\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"speed\",\n  type: \"general\",\n  name: \"Speed\",\n  from: {\n    name: \"Miles/Hour\",\n    id: \"milesHour\"\n  },\n  to: {\n    name: \"Feet/Sec\",\n    id: \"feetSec\"\n  },\n  units: [{\n    name: \"Miles/Hour\",\n    id: \"milesHour\"\n  }, {\n    name: \"Feet/Sec\",\n    id: \"feetSec\"\n  }, {\n    name: \"Meters/Sec\",\n    id: \"metersSec\"\n  }, {\n    name: \"Km/Hour\",\n    id: \"kmHour\"\n  }, {\n    name: \"Knots\",\n    id: \"knots\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"volume\",\n  type: \"general\",\n  name: \"Volume\",\n  from: {\n    name: \"US Gal\",\n    id: \"usGal\"\n  },\n  to: {\n    name: \"US Quart\",\n    id: \"usQuart\"\n  },\n  units: [{\n    \"name\": \"US Gal\",\n    \"id\": \"usGal\"\n  }, {\n    \"name\": \"US Quart\",\n    \"id\": \"usQuart\"\n  }, {\n    \"name\": \"US Pint\",\n    \"id\": \"usPint\"\n  }, {\n    \"name\": \"US Cup\",\n    \"id\": \"usCup\"\n  }, {\n    \"name\": \"US Oz\",\n    \"id\": \"usOz\"\n  }, {\n    \"name\": \"US Tbsp.\",\n    \"id\": \"usTbsp\"\n  }, {\n    \"name\": \"US Tsp.\",\n    \"id\": \"usTsp\"\n  }, {\n    \"name\": \"Cubic Meter\",\n    \"id\": \"cubicMeter\"\n  }, {\n    \"name\": \"Liters\",\n    \"id\": \"liters\"\n  }, {\n    \"name\": \"Milliliter\",\n    \"id\": \"milliliter\"\n  }, {\n    \"name\": \"Imperial Gal\",\n    \"id\": \"imperialGal\"\n  }, {\n    \"name\": \"Imperial Quart\",\n    \"id\": \"imperialQuart\"\n  }, {\n    \"name\": \"Imperial Pint\",\n    \"id\": \"imperialPint\"\n  }, {\n    \"name\": \"Imperial Oz\",\n    \"id\": \"imperialOz\"\n  }, {\n    \"name\": \"Imperial Tbsp.\",\n    \"id\": \"imperialTbsp\"\n  }, {\n    \"name\": \"Imperial Tsp.\",\n    \"id\": \"imperialTsp\"\n  }, {\n    \"name\": \"Cubic Foot\",\n    \"id\": \"cubicFoot\"\n  }, {\n    \"name\": \"Cubic Inch\",\n    \"id\": \"cubicInch\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"area\",\n  type: \"general\",\n  name: \"Area\",\n  from: {\n    name: \"Square Km\",\n    id: \"squareKm\"\n  },\n  to: {\n    name: \"Hectare\",\n    id: \"hectare\"\n  },\n  units: [{\n    \"name\": \"Square Km\",\n    \"id\": \"squareKm\"\n  }, {\n    \"name\": \"Hectare\",\n    \"id\": \"hectare\"\n  }, {\n    \"name\": \"Square Meter\",\n    \"id\": \"squareMeter\"\n  }, {\n    \"name\": \"Square Mile\",\n    \"id\": \"squareMile\"\n  }, {\n    \"name\": \"Acre\",\n    \"id\": \"acre\"\n  }, {\n    \"name\": \"Square Yard\",\n    \"id\": \"squareYard\"\n  }, {\n    \"name\": \"Square Foot\",\n    \"id\": \"squareFoot\"\n  }, {\n    \"name\": \"Square Inch\",\n    \"id\": \"squareInch\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"fuel_consumption\",\n  type: \"general\",\n  name: \"Fuel Consumption\",\n  from: {\n    name: \"MPG (US)\",\n    id: \"mpgUs\"\n  },\n  to: {\n    name: \"MPG (imp.)\",\n    id: \"mpgImp\"\n  },\n  units: [{\n    \"name\": \"MPG (US)\",\n    \"id\": \"mpgUs\"\n  }, {\n    \"name\": \"MPG (imp.)\",\n    \"id\": \"mpgImp\"\n  }, {\n    \"name\": \"Km\\/Liter\",\n    \"id\": \"kmLiter\"\n  }, {\n    \"name\": \"Liter\\/100km\",\n    \"id\": \"liter100km\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"time\",\n  type: \"general\",\n  name: \"Time\",\n  from: {\n    name: \"Nanoseconds\",\n    id: \"nanoseconds\"\n  },\n  to: {\n    name: \"Microseconds\",\n    id: \"microseconds\"\n  },\n  units: [{\n    \"name\": \"Nanoseconds\",\n    \"id\": \"nanoseconds\"\n  }, {\n    \"name\": \"Microseconds\",\n    \"id\": \"microseconds\"\n  }, {\n    \"name\": \"Milliseconds\",\n    \"id\": \"milliseconds\"\n  }, {\n    \"name\": \"Seconds\",\n    \"id\": \"seconds\"\n  }, {\n    \"name\": \"Minutes\",\n    \"id\": \"minutes\"\n  }, {\n    \"name\": \"Hours\",\n    \"id\": \"hours\"\n  }, {\n    \"name\": \"Days\",\n    \"id\": \"days\"\n  }, {\n    \"name\": \"Weeks\",\n    \"id\": \"weeks\"\n  }, {\n    \"name\": \"Months\",\n    \"id\": \"months\"\n  }, {\n    \"name\": \"Years\",\n    \"id\": \"years\"\n  }, {\n    \"name\": \"Decades\",\n    \"id\": \"decades\"\n  }, {\n    \"name\": \"Century\",\n    \"id\": \"century\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"digital_storage\",\n  type: \"general\",\n  name: \"Digital Storage\",\n  from: {\n    name: \"Bits\",\n    id: \"bits\"\n  },\n  to: {\n    name: \"Bytes\",\n    id: \"bytes\"\n  },\n  units: [{\n    \"name\": \"Bits\",\n    \"id\": \"bits\"\n  }, {\n    \"name\": \"Bytes\",\n    \"id\": \"bytes\"\n  }, {\n    \"name\": \"Kilobits\",\n    \"id\": \"kilobits\"\n  }, {\n    \"name\": \"Kilobytes\",\n    \"id\": \"kilobytes\"\n  }, {\n    \"name\": \"Megabits\",\n    \"id\": \"megabits\"\n  }, {\n    \"name\": \"Megabytes\",\n    \"id\": \"megabytes\"\n  }, {\n    \"name\": \"Gigabits\",\n    \"id\": \"gigabits\"\n  }, {\n    \"name\": \"Gigabytes\",\n    \"id\": \"gigabytes\"\n  }, {\n    \"name\": \"Terabits\",\n    \"id\": \"terabits\"\n  }, {\n    \"name\": \"Terabytes\",\n    \"id\": \"terabytes\"\n  }, {\n    \"name\": \"Petabits\",\n    \"id\": \"petabits\"\n  }, {\n    \"name\": \"Petabytes\",\n    \"id\": \"petabytes\"\n  }, {\n    \"name\": \"Exabits\",\n    \"id\": \"exabits\"\n  }, {\n    \"name\": \"Exabytes\",\n    \"id\": \"exabytes\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"energy\",\n  type: \"general\",\n  name: \"Energy\",\n  from: {\n    name: \"Btu (th)\",\n    id: \"btuTh\"\n  },\n  to: {\n    name: \"Btu (mean)\",\n    id: \"btuMean\"\n  },\n  units: [{\n    \"name\": \"Btu (th)\",\n    \"id\": \"btuTh\"\n  }, {\n    \"name\": \"Btu (mean)\",\n    \"id\": \"btuMean\"\n  }, {\n    \"name\": \"Calories (IT)\",\n    \"id\": \"caloriesIt\"\n  }, {\n    \"name\": \"Calories (th)\",\n    \"id\": \"caloriesTh\"\n  }, {\n    \"name\": \"Calories (mean)\",\n    \"id\": \"caloriesMean\"\n  }, {\n    \"name\": \"Calories (15C)\",\n    \"id\": \"calories15c\"\n  }, {\n    \"name\": \"Calories (20C)\",\n    \"id\": \"calories20c\"\n  }, {\n    \"name\": \"Calories (food)\",\n    \"id\": \"caloriesFood\"\n  }, {\n    \"name\": \"Centigrade Heat Units\",\n    \"id\": \"centigradeHeatUnits\"\n  }, {\n    \"name\": \"Electron Volts\",\n    \"id\": \"electronVolts\"\n  }, {\n    \"name\": \"Ergs\",\n    \"id\": \"ergs\"\n  }, {\n    \"name\": \"Foot-Pound Force\",\n    \"id\": \"footPoundForce\"\n  }, {\n    \"name\": \"Foot Poundals\",\n    \"id\": \"footPoundals\"\n  }, {\n    \"name\": \"Gigajoules\",\n    \"id\": \"gigajoules\"\n  }, {\n    \"name\": \"Horsepower Hours\",\n    \"id\": \"horsepowerHours\"\n  }, {\n    \"name\": \"Inch-Pound Force\",\n    \"id\": \"inchPoundForce\"\n  }, {\n    \"name\": \"Joules\",\n    \"id\": \"joules\"\n  }, {\n    \"name\": \"Kilocalories (IT)\",\n    \"id\": \"kilocaloriesIt\"\n  }, {\n    \"name\": \"Kilocalories (th)\",\n    \"id\": \"kilocaloriesTh\"\n  }, {\n    \"name\": \"Kilogram-Force Meters\",\n    \"id\": \"kilogramForceMeters\"\n  }, {\n    \"name\": \"Kilojoules\",\n    \"id\": \"kilojoules\"\n  }, {\n    \"name\": \"Kilowatt Hours\",\n    \"id\": \"kilowattHours\"\n  }, {\n    \"name\": \"Megajoules\",\n    \"id\": \"megajoules\"\n  }, {\n    \"name\": \"Newton Meters\",\n    \"id\": \"newtonMeters\"\n  }, {\n    \"name\": \"Therms\",\n    \"id\": \"therms\"\n  }, {\n    \"name\": \"Watt Seconds\",\n    \"id\": \"wattSeconds\"\n  }, {\n    \"name\": \"Watt Hours\",\n    \"id\": \"wattHours\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"power\",\n  type: \"general\",\n  name: \"Power\",\n  from: {\n    name: \"Watts\",\n    id: \"watts\"\n  },\n  to: {\n    name: \"Kilowatts\",\n    id: \"kilowatts\"\n  },\n  units: [{\n    \"name\": \"Watts\",\n    \"id\": \"watts\"\n  }, {\n    \"name\": \"Kilowatts\",\n    \"id\": \"kilowatts\"\n  }, {\n    \"name\": \"Megawatts\",\n    \"id\": \"megawatts\"\n  }, {\n    \"name\": \"Gigawatts\",\n    \"id\": \"gigawatts\"\n  }, {\n    \"name\": \"Btu\\/Hour\",\n    \"id\": \"btuHour\"\n  }, {\n    \"name\": \"Btu\\/Minute\",\n    \"id\": \"btuMinute\"\n  }, {\n    \"name\": \"Btu\\/Second\",\n    \"id\": \"btuSecond\"\n  }, {\n    \"name\": \"Calories(th)\\/Hour\",\n    \"id\": \"caloriesthHour\"\n  }, {\n    \"name\": \"Calories(th)\\/Minute\",\n    \"id\": \"caloriesthMinute\"\n  }, {\n    \"name\": \"Calories(th)\\/Second\",\n    \"id\": \"caloriesthSecond\"\n  }, {\n    \"name\": \"Kilocalories(th)\\/Hour\",\n    \"id\": \"kilocaloriesthHour\"\n  }, {\n    \"name\": \"Kilocalories(th)\\/Minute\",\n    \"id\": \"kilocaloriesthMinute\"\n  }, {\n    \"name\": \"Foot Pounds-Force\\/Minute\",\n    \"id\": \"footPoundsForceMinute\"\n  }, {\n    \"name\": \"Foot Pounds-Force\\/Second\",\n    \"id\": \"footPoundsForceSecond\"\n  }, {\n    \"name\": \"Horsepowers (electric)\",\n    \"id\": \"horsepowersElectric\"\n  }, {\n    \"name\": \"Horsepowers (international)\",\n    \"id\": \"horsepowersInternational\"\n  }, {\n    \"name\": \"Horsepowers (water)\",\n    \"id\": \"horsepowersWater\"\n  }, {\n    \"name\": \"Horsepowers (metric)\",\n    \"id\": \"horsepowersMetric\"\n  }, {\n    \"name\": \"Joules\\/Hour\",\n    \"id\": \"joulesHour\"\n  }, {\n    \"name\": \"Joules\\/Minute\",\n    \"id\": \"joulesMinute\"\n  }, {\n    \"name\": \"Joules\\/Second\",\n    \"id\": \"joulesSecond\"\n  }, {\n    \"name\": \"Kilogram-Force Meters\\/Hour\",\n    \"id\": \"kilogramForceMetersHour\"\n  }, {\n    \"name\": \"Kilogram-Force Meters\\/Minute\",\n    \"id\": \"kilogramForceMetersMinute\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"force\",\n  type: \"general\",\n  name: \"Force\",\n  from: {\n    name: \"Newtons\",\n    id: \"newtons\"\n  },\n  to: {\n    name: \"Kilonewtons\",\n    id: \"kilonewtons\"\n  },\n  units: [{\n    \"name\": \"Newtons\",\n    \"id\": \"newtons\"\n  }, {\n    \"name\": \"Kilonewtons\",\n    \"id\": \"kilonewtons\"\n  }, {\n    \"name\": \"Meganewtons\",\n    \"id\": \"meganewtons\"\n  }, {\n    \"name\": \"Dynes\",\n    \"id\": \"dynes\"\n  }, {\n    \"name\": \"Kilograms Force\",\n    \"id\": \"kilogramsForce\"\n  }, {\n    \"name\": \"Kips\",\n    \"id\": \"kips\"\n  }, {\n    \"name\": \"Pounds Force\",\n    \"id\": \"poundsForce\"\n  }, {\n    \"name\": \"Poundals\",\n    \"id\": \"poundals\"\n  }, {\n    \"name\": \"Sthenes (=kN)\",\n    \"id\": \"sthenes=kn\"\n  }, {\n    \"name\": \"Tonnes Force\",\n    \"id\": \"tonnesForce\"\n  }, {\n    \"name\": \"Tons Force (UK)\",\n    \"id\": \"tonsForceUk\"\n  }, {\n    \"name\": \"Tons Force (US)\",\n    \"id\": \"tonsForceUs\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}, {\n  id: \"electric_current\",\n  type: \"general\",\n  name: \"Electric Current\",\n  from: {\n    name: \"Abampere\",\n    id: \"abampere\"\n  },\n  to: {\n    name: \"Ampere\",\n    id: \"ampere\"\n  },\n  units: [{\n    \"name\": \"Abampere\",\n    \"id\": \"abampere\"\n  }, {\n    \"name\": \"Ampere\",\n    \"id\": \"ampere\"\n  }, {\n    \"name\": \"Biot\",\n    \"id\": \"biot\"\n  }, {\n    \"name\": \"Centiampere\",\n    \"id\": \"centiampere\"\n  }, {\n    \"name\": \"Coulomb\\/Second\",\n    \"id\": \"coulombSecond\"\n  }, {\n    \"name\": \"EMU Of Current\",\n    \"id\": \"emuOfCurrent\"\n  }, {\n    \"name\": \"ESU Of Current\",\n    \"id\": \"esuOfCurrent\"\n  }, {\n    \"name\": \"Franklin\\/Second\",\n    \"id\": \"franklinSecond\"\n  }, {\n    \"name\": \"Gaussian Electric Current\",\n    \"id\": \"gaussianElectricCurrent\"\n  }, {\n    \"name\": \"Gigaampere\",\n    \"id\": \"gigaampere\"\n  }, {\n    \"name\": \"Gilbert\",\n    \"id\": \"gilbert\"\n  }, {\n    \"name\": \"Kiloampere\",\n    \"id\": \"kiloampere\"\n  }, {\n    \"name\": \"Megaampere\",\n    \"id\": \"megaampere\"\n  }, {\n    \"name\": \"Microampere\",\n    \"id\": \"microampere\"\n  }, {\n    \"name\": \"Milliampere\",\n    \"id\": \"milliampere\"\n  }, {\n    \"name\": \"Milliamp\",\n    \"id\": \"milliamp\"\n  }, {\n    \"name\": \"Manoampere\",\n    \"id\": \"manoampere\"\n  }, {\n    \"name\": \"Picoampere\",\n    \"id\": \"picoampere\"\n  }, {\n    \"name\": \"Siemens Volt\",\n    \"id\": \"siemensVolt\"\n  }, {\n    \"name\": \"Statampere\",\n    \"id\": \"statampere\"\n  }, {\n    \"name\": \"Teraampere\",\n    \"id\": \"teraampere\"\n  }, {\n    \"name\": \"Volt\\/Ohm\",\n    \"id\": \"voltOhm\"\n  }, {\n    \"name\": \"Watt\\/Volt\",\n    \"id\": \"wattVolt\"\n  }, {\n    \"name\": \"Weber\\/Henry\",\n    \"id\": \"weberHenry\"\n  }],\n  input_type: {\n    from: {\n      type: 'tel'\n    },\n    to: {\n      type: 'tel'\n    }\n  }\n}];\nexport async function getStaticPaths() {\n  const tools = [{\n    name: \"area\",\n    display: \"Area\",\n    id: 5,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"force\",\n    display: \"Force\",\n    id: 6,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"energy\",\n    display: \"Energy\",\n    id: 7,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"fuel_consumption\",\n    display: \"Fuel Consumption\",\n    id: 8,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"time\",\n    display: \"Time\",\n    id: 9,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"mass\",\n    display: \"Mass\",\n    id: 10,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"length\",\n    display: \"Length\",\n    id: 11,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"digital_storage\",\n    display: \"Data Storage\",\n    id: 12,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"temperature\",\n    display: \"Temperature\",\n    id: 16,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"electric_current\",\n    display: \"Current\",\n    id: 18,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"volume\",\n    display: \"Volume\",\n    id: 36,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"pressure\",\n    display: \"Pressure\",\n    id: 37,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"speed\",\n    display: \"Speed\",\n    id: 38,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"power\",\n    display: \"Power\",\n    id: 39,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"charge\",\n    display: \"Charge\",\n    id: 45,\n    type: \"conversions\",\n    category: \"conversion\"\n  }];\n  const paths = tools.map(post => ({\n    params: {\n      name: stringSpaceToHyphen(post.name)\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: false // See the \"fallback\" section below\n\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  const res = [{\n    stringId: \"1\",\n    a: 0,\n    b: 20,\n    name: \"mA\",\n    display: \"0-20 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"2\",\n    a: 4,\n    b: 20,\n    name: \"mA\",\n    display: \"4-20 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 4 to 20 milliamps, and display a 4-20mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"3\",\n    a: 0,\n    b: 25,\n    name: \"mA\",\n    display: \"0-25 mA\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 25 milliamps, and display a 0-25mA conversion scale for the chosen measurement range.\"\n  }, {\n    stringId: \"0\",\n    a: 3,\n    b: 15,\n    name: \"PSI\",\n    display: \"3-15 PSI\",\n    desc: \"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"\n  }];\n  const tools = [{\n    name: \"3-15 PSI\",\n    display: \"3-15 PSI\",\n    id: 0,\n    type: \"instrumentation\",\n    category: \"instrumentation\"\n  }, {\n    name: \"0-20mA\",\n    display: \"0-20 mA\",\n    id: 1,\n    type: \"instrumentation\",\n    category: \"instrumentation\"\n  }, {\n    name: \"4-20mA\",\n    display: \"4-20 mA\",\n    id: 2,\n    type: \"instrumentation\",\n    category: \"instrumentation\"\n  }, {\n    name: \"0-25mA\",\n    display: \"0-25 mA\",\n    id: 3,\n    type: \"instrumentation\",\n    category: \"instrumentation\"\n  }, {\n    name: \"zero\",\n    display: \"0-X to % (Conversion)\",\n    id: 4,\n    type: \"instrumentation\",\n    category: \"zero\"\n  }, {\n    children: \"brightness_1\",\n    name: \"area\",\n    display: \"Area\",\n    id: 5,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    children: \"chat\",\n    name: \"force\",\n    display: \"Force\",\n    id: 6,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"energy\",\n    display: \"Energy\",\n    id: 7,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"fuel_consumption\",\n    display: \"Fuel Consumption\",\n    id: 8,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"time\",\n    display: \"Time\",\n    id: 9,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"mass\",\n    display: \"Mass\",\n    id: 10,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"length\",\n    display: \"Length\",\n    id: 11,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"digital_storage\",\n    display: \"Data Storage\",\n    id: 12,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"resistancetemp\",\n    display: \"Resistance (from temperature)\",\n    id: 13,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"linearma\",\n    display: \"Linear mA to Square Root mA\",\n    id: 14,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"temperature\",\n    display: \"Temperature (from resistance)\",\n    id: 15,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"temperature\",\n    display: \"Temperature\",\n    id: 16,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"linear\",\n    display: \"Linear to Square Root percentage\",\n    id: 17,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"electric_current\",\n    display: \"Current\",\n    id: 18,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"ohms\",\n    display: \"Ohms law (R)\",\n    id: 19,\n    stringId: \"19\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"ohmsi\",\n    display: \"Ohms law (I)\",\n    id: 20,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"aircore\",\n    display: \"Air Core Inductance\",\n    id: 21,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"laser\",\n    display: \"Laser Real-Time Converter\",\n    id: 22,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"ohmsv\",\n    display: \"Ohms Law (V)\",\n    id: 23,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"parallel\",\n    display: \"Parallel Resistance\",\n    id: 24,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"velocitysound\",\n    display: \"Velocity of Sound\",\n    id: 25,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"lcresonance\",\n    display: \"LC Resonance\",\n    id: 26,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"voltagediv\",\n    display: \"Voltage Divider\",\n    id: 27,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"speedtime\",\n    display: \"Time (Speed)\",\n    id: 28,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"wheat\",\n    display: \"Wheatstone bridge\",\n    id: 29,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"color\",\n    display: \"Color code Resistance\",\n    id: 30,\n    type: \"electrical\",\n    category: \"color\"\n  }, {\n    name: \"powerrv\",\n    display: \"Power (with R,V)\",\n    id: 31,\n    stringId: \"31\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"powervi\",\n    display: \"Power (with V,I)\",\n    id: 32,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"frequency\",\n    display: \"Frequency\",\n    id: 33,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"speedspeed\",\n    display: \"Speed\",\n    id: 34,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"distance\",\n    display: \"Distance (Speed)\",\n    id: 35,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"volume\",\n    display: \"Volume\",\n    id: 36,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"pressure\",\n    display: \"Pressure\",\n    id: 37,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"speed\",\n    display: \"Speed\",\n    id: 38,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"power\",\n    display: \"Power\",\n    id: 39,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"powerir\",\n    display: \"Power (with R,I)\",\n    id: 40,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"wavelength\",\n    display: \"Wavelength\",\n    id: 41,\n    type: \"extra\",\n    category: \"electrical\"\n  }, {\n    name: \"powerline\",\n    display: \"Power Factor 3Phase (Line)\",\n    id: 42,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"powerneutral\",\n    display: \"Power Factor 3Phase (neutral)\",\n    id: 43,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"power\",\n    display: \"Power Factor Single Phase\",\n    id: 44,\n    stringId: \"44\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"charge\",\n    display: \"Charge\",\n    id: 45,\n    type: \"conversions\",\n    category: \"conversion\"\n  }, {\n    name: \"speedhorse\",\n    display: \"Speed (Horsepower)\",\n    id: 46,\n    stringId: \"46\",\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"torque\",\n    display: \"Torque (HorsePower)\",\n    id: 47,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"horsepower\",\n    display: \"HorsePower\",\n    id: 48,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"twoseals\",\n    display: \"Level measurement Two Seals\",\n    id: 49,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"onesealabove\",\n    display: \"Level measurement one seal above\",\n    id: 50,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"onesealbelow\",\n    display: \"Level measurement one seal below\",\n    id: 51,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"bubblelevel\",\n    display: \"Bubble Level\",\n    id: 52,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"bubbleinterface\",\n    display: \"Bubble Interface\",\n    id: 53,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"twosealint\",\n    display: \"Two Seal Interface\",\n    id: 54,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"opentank\",\n    display: \"Open Tank\",\n    id: 55,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"intwet\",\n    display: \"Interface Wet Leg\",\n    id: 56,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"liquidpurge\",\n    display: \"Liquid Purge\",\n    id: 57,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"LT3\",\n    display: \"Level Transmission Closed Vessel\",\n    id: 58,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"short\",\n    display: \"Short Circuit Calculation\",\n    id: 59,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"transformer\",\n    display: \"Transformer Fault Current\",\n    id: 60,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"DOL\",\n    display: \"DOL Star & Delta\",\n    id: 61,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"flowrate\",\n    display: \"Flow Rate Calculation\",\n    id: 62,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"hydrost\",\n    display: \"Hydrostatic Level\",\n    id: 63,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"orifice\",\n    display: \"Orifice Plate error\",\n    id: 64,\n    type: \"instrumentation\",\n    category: \"electrical\"\n  }, {\n    name: \"lb\",\n    display: \"LbIn to Nm\",\n    id: 65,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"nm\",\n    display: \"Nm to LbIn\",\n    id: 66,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"dcmotor\",\n    display: \"DC Motor horsepower\",\n    id: 67,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"eff1\",\n    display: \"Eff Tension from HP & FPM\",\n    id: 68,\n    type: \"electrical\",\n    category: \"electrical\"\n  }, {\n    name: \"eff2\",\n    display: \"Eff Tension from Torque and Radius\",\n    id: 69,\n    type: \"electrical\",\n    category: \"electrical\"\n  }];\n  const tooltype = [{\n    id: 1,\n    type: \"instrumentation\",\n    name: \"INSTRUMENTATION\",\n    show: false\n  }, {\n    id: 2,\n    type: \"electrical\",\n    name: \"ELECTRICAL\",\n    show: false\n  }, {\n    id: 3,\n    type: \"conversions\",\n    name: \"UNIT CONVERSION\",\n    show: false\n  }]; // Pass post data to the page via props\n\n  return {\n    props: {\n      names: tools,\n      toolType: tooltype,\n      params: params\n    }\n  };\n}","map":{"version":3,"sources":["/home/fazna/gudofWeb/pages/conversion/[name].js"],"names":["React","SideNav","DrawerNav","Navbar","Head","useRouter","stringSpaceToHyphen","Conversion","names","toolType","visible","setVisible","useState","showDrawer","window","innerWidth","onClose","useEffect","router","Option","isNumber","n","isNaN","parseFloat","isFinite","input1","setInput1","input2","setInput2","inn","setIn","out","setOut","roundIt","num","X","Math","round","pow","answer","setAnswer","compute","current_conversion","conversion_calc","in_out","value","console","log","first","second","array","oneUnitFrom","oneUnitTo","scale","scaleFrom","decimal","undefined","descriptions","name","descp","query","map","item","id","conversion_fn","findIndex","flex","border","e","target","units","parseInt","type","from","to","input_type","getStaticPaths","tools","display","category","paths","post","params","fallback","getStaticProps","res","stringId","a","b","desc","children","tooltype","show","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout,Button,Row,Input,Col,Select ,Drawer} from 'antd';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport Navbar from '../Navbar';\nimport Head from 'next/head'\nimport { Tabs } from 'antd';\n\nimport { useRouter } from 'next/router'\nimport { stringSpaceToHyphen } from '..';\n\nconst Conversion= ({names,toolType}) => {\n  const [visible, setVisible] = React.useState(false);\n  const showDrawer = () => {\n    if(window.innerWidth<=700)\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n  React.useEffect(()=>{\n    if(window.innerWidth>700)\n      setVisible(false)\n  })\n    const router = useRouter()\n    const {Option} = Select;\n   const isNumber = function (n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n      };\n      const [input1,setInput1] = React.useState()\n      const [input2,setInput2] = React.useState()\n      const [inn,setIn] = React.useState()\n      const [out,setOut] = React.useState()\n      const roundIt =  (num, X) =>{\n        X = (!X ? 6 : X);\n        return Math.round(num * Math.pow(10, X)) / Math.pow(10, X);\n      };\n    const [answer,setAnswer] = React.useState()\n\n      // Indicate that name should be a public property on the component\n      const compute = function(current_conversion, conversion_calc, in_out) {\n        let value \n        //varvalue=current_conversion\n        if(in_out === 'in'){\n          console.log(input1)\n         value=input1;\n        }\n        else{\n          value=input2;\n        }\n        \n        console.log(in_out);\n        console.log(\"value\",value,\"inout\",in_out);\n        var first =inn\n        var second =out\n        var array = conversion_calc[current_conversion]\n        console.log(\"current converdion\",first);\n        var oneUnitFrom = array[first];\n        var oneUnitTo = array[second]\n    \n        //Convert \"From\" units to base unit of category ie. celcius to Kelvin\n        if (isNumber(oneUnitFrom.scale)) {\n          value=value * oneUnitFrom.scale;\n        } else {\n          value= oneUnitFrom.scale(value);\n        }\n        console.log(\"oneUnitFrom.scale-val1:\"+value);\n        //Next Convert into \"To\" units from the base unit of category ie. kelvin to fahrenheit\n        if (isNumber(oneUnitTo.scale)) {\n         value=value / oneUnitTo.scale\n        } else {\n         value=oneUnitTo.scaleFrom(value)\n        }\n        console.log(\"oneUnitFrom.scale-val2:\"+value);\n        if(oneUnitTo.decimal !== undefined){\n         value=roundIt(value, oneUnitTo.decimal);\n        }\n        return value;\n        \n      }\n    const descriptions = [\n      {name:\"area\",descp:\"\"},\n      {name:\"force\",descp:\"\"},\n      {name:\"energy\",descp:\"\"},\n      {name:\"fuel_consumption\",descp:\"\"},\n      {name:\"time\",descp:\"\"},\n      {name:\"mass\",descp:\"\"},\n      {name:\"length\",descp:\"\"},\n      {name:\"digital_storage\",descp:\"\"},\n      {name:\"temperature\",descp:\"\"},\n      {name:\"current\",descp:\"\"},\n      {name:\"pressure\",descp:\"\"},\n      {name:\"speed\",descp:\"\"},\n      {name:\"power\",descp:\"\"},\n      {name:\"charge\",descp:\"\"},\n\n    ]\n  return (\n    <div>\n    <Head>\n    <title>{router.query.name}</title>\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"/>\n    \n    {descriptions.map(item => item.name === router.query.name\n    && <meta key=\"description\" name=\"description\"content={item.descp}/>) }\n  </Head>\n  <Navbar showDrawer={showDrawer}/>\n\n\n  <div className=\"tools-container\">\n      {/* sliding drawer */}\n      <Drawer width={350} title=\"gudofConvert\" placement=\"left\" closable={true} onClose={onClose} visible={visible}>\n        <DrawerNav names={names} toolType={toolType} onClose={()=>setVisible(false)}/>\n      </Drawer>\n\n      {/* fixed side menu */}\n      <div className=\"tools-left\">\n        <SideNav names={names} toolType={toolType}/>\n      </div>\n      \n    <Layout className=\"toolbox-layout\">\n     {router.query.id !== undefined &&\n     <div>   \n  <Row className=\"row\">\n    <div className=\"toolbox-heading\">\n    {conversion_fn[ conversion_fn.findIndex(item => item.id===router.query.id)].name}\n    </div>\n  </Row>\n  <hr className=\"hr\"/>\n  <div className=\"toolbox-calc\">\n      <div className=\"heading\">CAlculation</div>\n    <Row className=\"row\">\n\n        <Col style={{flex:1}}><Input style={{border:\"1px solid gray\"}} className=\"input box\" class=\"box\"  value={input1} onChange={(e)=>{\n          console.log(\"input\",e.target.value)\n          setInput1(e.target.value)}}/></Col>\n        <Col style={{flex:1}}>\n               <Select  style={{border:\"1px solid gray\"}} className=\"input box\" class=\"box\"  value={inn} onSelect={(e)=>{\n                   setIn(e)\n                   console.log(e)\n               }} placeholder=\"Input\">\n                   {conversion_fn[ conversion_fn.findIndex(item => item.id===router.query.id)].units.map(item=>\n                    <Option value={item.id}>{item.name}</Option>\n                    )}\n                     </Select>\n        </Col>\n    </Row>\n    <Row className=\"row\">\n        <Col style={{flex:1}}><Input style={{border:\"1px solid gray\"}} className=\"input box\" class=\"box\"  value={answer} disabled/></Col>\n        <Col style={{flex:1}}>\n\n<Select className=\"input box\"  style={{border:\"1px solid gray\"}} class=\"box\" value={out} onSelect={(e)=>{\nsetOut(e)\n}} placeholder=\"Output\">\n{conversion_fn[ conversion_fn.findIndex(item => item.id===router.query.id)].units.map(item=>\n<Option value={item.id}>{item.name}</Option>\n)}\n</Select>\n\n</Col>\n    </Row>\n    \n    <Button className=\"calculate-button\" onClick={()=>{\n           setAnswer(compute(conversion_fn[conversion_fn.findIndex(item => item.id===router.query.id)].id,conversion_calc,'in'))\n\n}}>Convert</Button>\n    {/* <div className=\"description\">Use this conversion utility to convert instantly between different units.</div> */}\n\n</div>\n\n<hr className=\"hr\"/>\n{/* RESULT */}\n{\n  answer!==undefined\n  &&\n  <div>\n    \n    <div className=\"toolbox-calc\">\n      <div className=\"heading\">RESULT</div>\n      {input1} {inn} ={ answer} {out}\n      </div>\n    </div>\n }\n\n\n\n</div>}\n\n</Layout>\n</div>\n</div>\n  );\n};\n\nexport default Conversion;\n\nexport const conversion_calc = {\"temperature\": {\n    \"celsius\": {\n      \"scale\": function(value) {\n        value = parseInt(value);\n        return (value + 273.15);\n      },\n      \"scaleFrom\": function(value) {\n        value = parseInt(value);\n        return (value - 273.15);\n      },\n      \"symbol\": \"\",\n      \"name\": \"Celsius\"\n    },\n    \"fahrenheit\": {\n      \"scale\": function(value) {\n        value = parseInt(value);\n        return (5 / 9 * (value + 459.67));\n      },\n      \"scaleFrom\": function(value) {\n        value = parseInt(value);\n        return (9 / 5 * value - 459.67);\n      },\n      \"symbol\": \"\",\n      \"name\": \"Fahrenheit\"\n    },\n    \"kelvin\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Kelvin\"\n    }\n  },\n  \"pressure\": {\n    \"atm\": {\n      \"scale\": 1/0.986923,\n      \"symbol\": \"\",\n      \"name\": \"Atmosphere\"\n    },\n    \"b\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"bar\"\n    },\n    \"dcm\": {\n      \"scale\": 1/1000000,\n      \"symbol\": \"\",\n      \"name\": \"dynes/cm2\"\n    },\n    \"ihg\": {\n      \"scale\": 1/29.9213,\n      \"symbol\": \"\",\n      \"name\": \"in. Hg\"\n    },\n    \"iw\": {\n      \"scale\": 1/401.46307866999996,\n      \"symbol\": \"\",\n      \"name\": \"in. water\"\n    },\n    \"k\": {\n      \"scale\": 1/1.019716213,\n      \"symbol\": \"\",\n      \"name\": \"kg/cm2\"\n    },\n    \"m\": {\n      \"scale\": 1/1000,\n      \"symbol\": \"\",\n      \"name\": \"mbar\"\n    },\n    \"mtm\": {\n      \"scale\": 1/750061.673821,\n      \"symbol\": \"\",\n      \"name\": \"mtorr or micron\"\n    },\n    \"pnm\": {\n      \"scale\": 1/100000,\n      \"symbol\": \"\",\n      \"name\": \"Pa or N/m2\"\n    },\n    \"kpa\": {\n      \"scale\": 1/100,\n      \"symbol\": \"\",\n      \"name\": \"KPa\"\n    },\n    \"psi\": {\n      \"scale\": 1/14.50377,\n      \"symbol\": \"\",\n      \"name\": \"PSI or lb/in2\"\n    }\n  },\n  \"charge\": {\n    \"c\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Coulomb\"\n    },\n    \"milli\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"milliCoulomb\"\n    },\n    \"micro\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"microCoulomb\"\n    },\n    \"nano\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"nanoCoulomb\"\n    },\n    \"pico\": {\n      \"scale\": 10**12,\n      \"symbol\": \"\",\n      \"name\": \"picoCoulomb\"\n    },\n    \"e\": {\n      \"scale\":6.24150975e+18,\n      \"symbol\": \"\",\n      \"name\": \"e Charge\"\n    },\n    \"amp\": {\n      \"scale\": 0.0002777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Ampere Hours\"\n    }\n  },\n  \"length\": {\n    \"kilometer\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilometer\"\n    },\n    \"meters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Meters\"\n    },\n    \"centimeters\": {\n      \"scale\": 0.01,\n      \"symbol\": \"\",\n      \"name\": \"Centimeters\"\n    },\n    \"millimeters\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Millimeters\"\n    },\n    \"miles\": {\n      \"scale\": 1609.344,\n      \"symbol\": \"\",\n      \"name\": \"Miles\"\n    },\n    \"yards\": {\n      \"scale\": 0.9144,\n      \"symbol\": \"\",\n      \"name\": \"Yards\"\n    },\n    \"feet\": {\n      \"scale\": 0.3048006096012192,\n      \"symbol\": \"\",\n      \"name\": \"Feet\"\n    },\n    \"inches\": {\n      \"scale\": 0.0254,\n      \"symbol\": \"\",\n      \"name\": \"Inches\"\n    },\n    \"nauticalMiles\": {\n      \"scale\": 1852,\n      \"symbol\": \"\",\n      \"name\": \"Nautical Miles\"\n    }\n  },\n  \"mass\": {\n    \"metricTon\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Metric Ton\"\n    },\n    \"kilogram\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram\"\n    },\n    \"gram\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Gram\"\n    },\n    \"milligram\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Milligram\"\n    },\n    \"mcg\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Mcg\"\n    },\n    \"longTon\": {\n      \"scale\": 1016.0469088,\n      \"symbol\": \"\",\n      \"name\": \"Long Ton\"\n    },\n    \"shortTon\": {\n      \"scale\": 907.18474,\n      \"symbol\": \"\",\n      \"name\": \"Short Ton\"\n    },\n    \"stones\": {\n      \"scale\": 6.35029318,\n      \"symbol\": \"\",\n      \"name\": \"Stones\"\n    },\n    \"pound\": {\n      \"scale\": 0.45359237,\n      \"symbol\": \"\",\n      \"name\": \"Pound\"\n    },\n    \"ounce\": {\n      \"scale\": 0.028349523125,\n      \"symbol\": \"\",\n      \"name\": \"Ounce\"\n    }\n  },\n  \"speed\": {\n    \"milesHour\": {\n      \"scale\": 0.44704,\n      \"symbol\": \"\",\n      \"name\": \"Miles/Hour\"\n    },\n    \"feetSec\": {\n      \"scale\": 0.3048,\n      \"symbol\": \"\",\n      \"name\": \"Feet/Sec\"\n    },\n    \"metersSec\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Meters/Sec\"\n    },\n    \"kmHour\": {\n      \"scale\": 0.2777777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Km/Hour\"\n    },\n    \"knots\": {\n      \"scale\": 0.5144444444444445,\n      \"symbol\": \"\",\n      \"name\": \"Knots\"\n    }\n  },\n  \"volume\": {\n    \"usGal\": {\n      \"scale\": 3.785411784,\n      \"symbol\": \"\",\n      \"name\": \"US Gal\"\n    },\n    \"usQuart\": {\n      \"scale\": 0.946352946,\n      \"symbol\": \"\",\n      \"name\": \"US Quart\"\n    },\n    \"usPint\": {\n      \"scale\": 0.473176473,\n      \"symbol\": \"\",\n      \"name\": \"US Pint\"\n    },\n    \"usCup\": {\n      \"scale\": 0.2365882365,\n      \"symbol\": \"\",\n      \"name\": \"US Cup\"\n    },\n    \"usOz\": {\n      \"scale\": 0.0295735295625,\n      \"symbol\": \"\",\n      \"name\": \"US Oz\"\n    },\n    \"usTbsp\": {\n      \"scale\": 0.01478676478125,\n      \"symbol\": \"\",\n      \"name\": \"US Tbsp.\"\n    },\n    \"usTsp\": {\n      \"scale\": 0.00492892159375,\n      \"symbol\": \"\",\n      \"name\": \"US Tsp.\"\n    },\n    \"cubicMeter\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Meter\"\n    },\n    \"liters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Liters\"\n    },\n    \"milliliter\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliliter\"\n    },\n    \"imperialGal\": {\n      \"scale\": 4.54609,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Gal\"\n    },\n    \"imperialQuart\": {\n      \"scale\": 1.1365225,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Quart\"\n    },\n    \"imperialPint\": {\n      \"scale\": 0.56826125,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Pint\"\n    },\n    \"imperialOz\": {\n      \"scale\": 0.0284130625,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Oz\"\n    },\n    \"imperialTbsp\": {\n      \"scale\": 0.0177582,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Tbsp.\"\n    },\n    \"imperialTsp\": {\n      \"scale\": 0.00591939,\n      \"symbol\": \"\",\n      \"name\": \"Imperial Tsp.\"\n    },\n    \"cubicFoot\": {\n      \"scale\": 28.316846592,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Foot\"\n    },\n    \"cubicInch\": {\n      \"scale\": 0.016387064,\n      \"symbol\": \"\",\n      \"name\": \"Cubic Inch\"\n    }\n  },\n  \"area\": {\n    \"squareKm\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Square Km\"\n    },\n    \"hectare\": {\n      \"scale\": 10000,\n      \"symbol\": \"\",\n      \"name\": \"Hectare\"\n    },\n    \"squareMeter\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Square Meter\"\n    },\n    \"squareMile\": {\n      \"scale\": 2589988.110336,\n      \"symbol\": \"\",\n      \"name\": \"Square Mile\"\n    },\n    \"acre\": {\n      \"scale\": 4046.8564224,\n      \"symbol\": \"\",\n      \"name\": \"Acre\"\n    },\n    \"squareYard\": {\n      \"scale\": 0.83612736,\n      \"symbol\": \"\",\n      \"name\": \"Square Yard\"\n    },\n    \"squareFoot\": {\n      \"scale\": 0.09290304,\n      \"symbol\": \"\",\n      \"name\": \"Square Foot\"\n    },\n    \"squareInch\": {\n      \"scale\": 0.00064516,\n      \"symbol\": \"\",\n      \"name\": \"Square Inch\"\n    }\n  },\n  \"fuel_consumption\": {\n    \"mpgUs\": {\n      \"scale\": function(value) {\n        return 2.3521458333333333333333333333333e-3 / value;\n      },\n      \"scaleFrom\" : function(value) {\n        return 2.3521458333333333333333333333333e-3 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"MPG (US)\"\n    },\n    \"mpgImp\": {\n      \"scale\": function(value) {\n        return 2.8248093633182215859381213711925e-3 / value;\n      },\n      \"scaleFrom\": function(value) {\n        return 2.8248093633182215859381213711925e-3 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"MPG (imp.)\"\n    },\n    \"kmLiter\": {\n      \"scale\": function(value) {\n        return 0.001 / value;\n      },\n      \"scaleFrom\": function(value) {\n        return 0.001 / value;\n      },\n      \"symbol\": \"\",\n      \"name\": \"Km/Liter\"\n    },\n    \"liter100km\": {\n      \"scale\": 0.00001,\n      \"symbol\": \"\",\n      \"name\": \"Liter/100km\"\n    }\n  },\n  \"time\": {\n    \"nanoseconds\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Nanoseconds\"\n    },\n    \"microseconds\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Microseconds\"\n    },\n    \"milliseconds\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliseconds\"\n    },\n    \"seconds\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Seconds\"\n    },\n    \"minutes\": {\n      \"scale\": 60,\n      \"symbol\": \"\",\n      \"name\": \"Minutes\"\n    },\n    \"hours\": {\n      \"scale\": 3600,\n      \"symbol\": \"\",\n      \"name\": \"Hours\"\n    },\n    \"days\": {\n      \"scale\": 86400,\n      \"symbol\": \"\",\n      \"name\": \"Days\"\n    },\n    \"weeks\": {\n      \"scale\": 604800,\n      \"symbol\": \"\",\n      \"name\": \"Weeks\"\n    },\n    \"months\": {\n      \"scale\": 2628000,\n      \"symbol\": \"\",\n      \"name\": \"Months\"\n    },\n    \"years\": {\n      \"scale\": 31536000,\n      \"symbol\": \"\",\n      \"name\": \"Years\"\n    },\n    \"decades\": {\n      \"scale\": 315360000,\n      \"symbol\": \"\",\n      \"name\": \"Decades\"\n    },\n    \"century\": {\n      \"scale\": 3.1689e-10,\n      \"symbol\": \"\",\n      \"name\": \"Century\"\n    }\n  },\n  \"digital_storage\": {\n    \"bits\": {\n      \"scale\": 0.125,\n      \"symbol\": \"\",\n      \"name\": \"Bits\"\n    },\n    \"bytes\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Bytes\"\n    },\n    \"kilobits\": {\n      \"scale\": 128,\n      \"symbol\": \"\",\n      \"name\": \"Kilobits\"\n    },\n    \"kilobytes\": {\n      \"scale\": 1024,\n      \"symbol\": \"\",\n      \"name\": \"Kilobytes\"\n    },\n    \"megabits\": {\n      \"scale\": 131072,\n      \"symbol\": \"\",\n      \"name\": \"Megabits\"\n    },\n    \"megabytes\": {\n      \"scale\": 1048576,\n      \"symbol\": \"\",\n      \"name\": \"Megabytes\"\n    },\n    \"gigabits\": {\n      \"scale\": 134217728,\n      \"symbol\": \"\",\n      \"name\": \"Gigabits\"\n    },\n    \"gigabytes\": {\n      \"scale\": 1073741824,\n      \"symbol\": \"\",\n      \"name\": \"Gigabytes\"\n    },\n    \"terabits\": {\n      \"scale\": 137438953472,\n      \"symbol\": \"\",\n      \"name\": \"Terabits\"\n    },\n    \"terabytes\": {\n      \"scale\": 1099511627776,\n      \"symbol\": \"\",\n      \"name\": \"Terabytes\"\n    },\n    \"petabits\": {\n      \"scale\": 140737488355328,\n      \"symbol\": \"\",\n      \"name\": \"Petabits\"\n    },\n    \"petabytes\": {\n      \"scale\": 1125899906842624,\n      \"symbol\": \"\",\n      \"name\": \"Petabytes\"\n    },\n    \"exabits\": {\n      \"scale\": 144115188075855870,\n      \"symbol\": \"\",\n      \"name\": \"Exabits\"\n    },\n    \"exabytes\": {\n      \"scale\": 1152921504606847000,\n      \"symbol\": \"\",\n      \"name\": \"Exabytes\"\n    }\n  },\n  \"energy\": {\n    \"btuTh\": {\n      \"scale\": 1054.35,\n      \"symbol\": \"\",\n      \"name\": \"Btu (th)\"\n    },\n    \"btuMean\": {\n      \"scale\": 1055.87,\n      \"symbol\": \"\",\n      \"name\": \"Btu (mean)\"\n    },\n    \"caloriesIt\": {\n      \"scale\": 4.1868,\n      \"symbol\": \"\",\n      \"name\": \"Calories (IT)\"\n    },\n    \"caloriesTh\": {\n      \"scale\": 4.184,\n      \"symbol\": \"\",\n      \"name\": \"Calories (th)\"\n    },\n    \"caloriesMean\": {\n      \"scale\": 4.19002,\n      \"symbol\": \"\",\n      \"name\": \"Calories (mean)\"\n    },\n    \"calories15c\": {\n      \"scale\": 4.1858,\n      \"symbol\": \"\",\n      \"name\": \"Calories (15C)\"\n    },\n    \"calories20c\": {\n      \"scale\": 4.1819,\n      \"symbol\": \"\",\n      \"name\": \"Calories (20C)\"\n    },\n    \"caloriesFood\": {\n      \"scale\": 4186,\n      \"symbol\": \"\",\n      \"name\": \"Calories (food)\"\n    },\n    \"centigradeHeatUnits\": {\n      \"scale\": 1900.4,\n      \"symbol\": \"\",\n      \"name\": \"Centigrade Heat Units\"\n    },\n    \"electronVolts\": {\n      \"scale\": 1.60219e-19,\n      \"symbol\": \"\",\n      \"name\": \"Electron Volts\"\n    },\n    \"ergs\": {\n      \"scale\": 1e-7,\n      \"symbol\": \"\",\n      \"name\": \"Ergs\"\n    },\n    \"footPoundForce\": {\n      \"scale\": 1.3558179483314003,\n      \"symbol\": \"\",\n      \"name\": \"Foot-Pound Force\"\n    },\n    \"footPoundals\": {\n      \"scale\": 0.04214,\n      \"symbol\": \"\",\n      \"name\": \"Foot Poundals\"\n    },\n    \"gigajoules\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigajoules\"\n    },\n    \"horsepowerHours\": {\n      \"scale\": 2684520,\n      \"symbol\": \"\",\n      \"name\": \"Horsepower Hours\"\n    },\n    \"inchPoundForce\": {\n      \"scale\": 0.11298482902761668,\n      \"symbol\": \"\",\n      \"name\": \"Inch-Pound Force\"\n    },\n    \"joules\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Joules\"\n    },\n    \"kilocaloriesIt\": {\n      \"scale\": 4186.8,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories (IT)\"\n    },\n    \"kilocaloriesTh\": {\n      \"scale\": 4184,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories (th)\"\n    },\n    \"kilogramForceMeters\": {\n      \"scale\": 9.80665,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters\"\n    },\n    \"kilojoules\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilojoules\"\n    },\n    \"kilowattHours\": {\n      \"scale\": 3600000,\n      \"symbol\": \"\",\n      \"name\": \"Kilowatt Hours\"\n    },\n    \"megajoules\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megajoules\"\n    },\n    \"newtonMeters\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Newton Meters\"\n    },\n    \"therms\": {\n      \"scale\": 105505585.257348,\n      \"symbol\": \"\",\n      \"name\": \"Therms\"\n    },\n    \"wattSeconds\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watt Seconds\"\n    },\n    \"wattHours\": {\n      \"scale\": 3600,\n      \"symbol\": \"\",\n      \"name\": \"Watt Hours\"\n    }\n  },\n  \"power\": {\n    \"watts\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watts\"\n    },\n    \"kilowatts\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilowatts\"\n    },\n    \"megawatts\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megawatts\"\n    },\n    \"gigawatts\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigawatts\"\n    },\n    \"btuHour\": {\n      \"scale\": 0.293071,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Hour\"\n    },\n    \"btuMinute\": {\n      \"scale\": 17.584267,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Minute\"\n    },\n    \"btuSecond\": {\n      \"scale\": 1055.056,\n      \"symbol\": \"\",\n      \"name\": \"Btu/Second\"\n    },\n    \"caloriesthHour\": {\n      \"scale\": 0.001162222222222222,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Hour\"\n    },\n    \"caloriesthMinute\": {\n      \"scale\": 0.06973333333333333,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Minute\"\n    },\n    \"caloriesthSecond\": {\n      \"scale\": 4.184,\n      \"symbol\": \"\",\n      \"name\": \"Calories(th)/Second\"\n    },\n    \"kilocaloriesthHour\": {\n      \"scale\": 1.1622222222222223,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories(th)/Hour\"\n    },\n    \"kilocaloriesthMinute\": {\n      \"scale\": 69.73333333333333,\n      \"symbol\": \"\",\n      \"name\": \"Kilocalories(th)/Minute\"\n    },\n    \"footPoundsForceMinute\": {\n      \"scale\": 0.022597,\n      \"symbol\": \"\",\n      \"name\": \"Foot Pounds-Force/Minute\"\n    },\n    \"footPoundsForceSecond\": {\n      \"scale\": 1.35582,\n      \"symbol\": \"\",\n      \"name\": \"Foot Pounds-Force/Second\"\n    },\n    \"horsepowersElectric\": {\n      \"scale\": 746,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (electric)\"\n    },\n    \"horsepowersInternational\": {\n      \"scale\": 745.6998715822702,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (international)\"\n    },\n    \"horsepowersWater\": {\n      \"scale\": 746.043,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (water)\"\n    },\n    \"horsepowersMetric\": {\n      \"scale\": 735.4988,\n      \"symbol\": \"\",\n      \"name\": \"Horsepowers (metric)\"\n    },\n    \"joulesHour\": {\n      \"scale\": 0.0002777777777777778,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Hour\"\n    },\n    \"joulesMinute\": {\n      \"scale\": 0.016666666666666666,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Minute\"\n    },\n    \"joulesSecond\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Joules/Second\"\n    },\n    \"kilogramForceMetersHour\": {\n      \"scale\": 0.002724,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters/Hour\"\n    },\n    \"kilogramForceMetersMinute\": {\n      \"scale\": 0.163444,\n      \"symbol\": \"\",\n      \"name\": \"Kilogram-Force Meters/Minute\"\n    }\n  },\n  \"force\": {\n    \"newtons\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Newtons\"\n    },\n    \"kilonewtons\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kilonewtons\"\n    },\n    \"meganewtons\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Meganewtons\"\n    },\n    \"dynes\": {\n      \"scale\": 0.00001,\n      \"symbol\": \"\",\n      \"name\": \"Dynes\"\n    },\n    \"kilogramsForce\": {\n      \"scale\": 9.80665,\n      \"symbol\": \"\",\n      \"name\": \"Kilograms Force\"\n    },\n    \"kips\": {\n      \"scale\": 4448.222,\n      \"symbol\": \"\",\n      \"name\": \"Kips\"\n    },\n    \"poundsForce\": {\n      \"scale\": 4.4482216152605,\n      \"symbol\": \"\",\n      \"name\": \"Pounds Force\"\n    },\n    \"poundals\": {\n      \"scale\": 0.138255,\n      \"symbol\": \"\",\n      \"name\": \"Poundals\"\n    },\n    \"sthenes=kn\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Sthenes (=kN)\"\n    },\n    \"tonnesForce\": {\n      \"scale\": 9806.65,\n      \"symbol\": \"\",\n      \"name\": \"Tonnes Force\"\n    },\n    \"tonsForceUk\": {\n      \"scale\": 9964.01641818352,\n      \"symbol\": \"\",\n      \"name\": \"Tons Force (UK)\"\n    },\n    \"tonsForceUs\": {\n      \"scale\": 8896.443230521,\n      \"symbol\": \"\",\n      \"name\": \"Tons Force (US)\"\n    }\n  },\n  \"electric_current\": {\n    \"abampere\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"Abampere\"\n    },\n    \"ampere\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Ampere\"\n    },\n    \"biot\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"Biot\"\n    },\n    \"centiampere\": {\n      \"scale\": 0.01,\n      \"symbol\": \"\",\n      \"name\": \"Centiampere\"\n    },\n    \"coulombSecond\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Coulomb/Second\"\n    },\n    \"emuOfCurrent\": {\n      \"scale\": 10,\n      \"symbol\": \"\",\n      \"name\": \"EMU Of Current\"\n    },\n    \"esuOfCurrent\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"ESU Of Current\"\n    },\n    \"franklinSecond\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Franklin/Second\"\n    },\n    \"gaussianElectricCurrent\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Gaussian Electric Current\"\n    },\n    \"gigaampere\": {\n      \"scale\": 1000000000,\n      \"symbol\": \"\",\n      \"name\": \"Gigaampere\"\n    },\n    \"gilbert\": {\n      \"scale\": 0.79577472,\n      \"symbol\": \"\",\n      \"name\": \"Gilbert\"\n    },\n    \"kiloampere\": {\n      \"scale\": 1000,\n      \"symbol\": \"\",\n      \"name\": \"Kiloampere\"\n    },\n    \"megaampere\": {\n      \"scale\": 1000000,\n      \"symbol\": \"\",\n      \"name\": \"Megaampere\"\n    },\n    \"microampere\": {\n      \"scale\": 0.000001,\n      \"symbol\": \"\",\n      \"name\": \"Microampere\"\n    },\n    \"milliampere\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliampere\"\n    },\n    \"milliamp\": {\n      \"scale\": 0.001,\n      \"symbol\": \"\",\n      \"name\": \"Milliamp\"\n    },\n    \"manoampere\": {\n      \"scale\": 1e-9,\n      \"symbol\": \"\",\n      \"name\": \"Manoampere\"\n    },\n    \"picoampere\": {\n      \"scale\": 1e-12,\n      \"symbol\": \"\",\n      \"name\": \"Picoampere\"\n    },\n    \"siemensVolt\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Siemens Volt\"\n    },\n    \"statampere\": {\n      \"scale\": 3.335641e-10,\n      \"symbol\": \"\",\n      \"name\": \"Statampere\"\n    },\n    \"teraampere\": {\n      \"scale\": 1000000000000,\n      \"symbol\": \"\",\n      \"name\": \"Teraampere\"\n    },\n    \"voltOhm\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Volt/Ohm\"\n    },\n    \"wattVolt\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Watt/Volt\"\n    },\n    \"weberHenry\": {\n      \"scale\": 1,\n      \"symbol\": \"\",\n      \"name\": \"Weber/Henry\"\n    }\n  }\n};\n//conversion array list for input\nexport const conversion_fn= [\n\n    {\n        id: \"pressure\",\n        type: \"general\",\n        name: \"Pressure\",\n        // in: 1,\n        from: {\n          name: \"Atmosphere\",\n          id: \"atm\"\n        },\n        to: {\n          name: \"bar\",\n          id: \"b\"\n        },\n        units: [\n          {\n              name: \"Atmosphere\",\n              id: \"atm\"\n            },\n            {\n              name: \"bar\",\n              id: \"b\"\n            },\n            {\n              name: \"dynes/cm2\",\n              id: \"dcm\"\n            },\n            {\n              name: \"in. Hg\",\n              id: \"ihg\"\n            },\n            {\n              name: \"in. water\",\n              id: \"iw\"\n            },\n            {\n              name: \"kg/cm2\",\n              id: \"k\"\n            },\n            {\n              name: \"mbar\",\n              id: \"m\"\n            },\n            {\n              name: \"mtorr or micron\",\n              id: \"mtm\"\n            },\n            {\n              name: \"Pa or N/m2\",\n              id: \"pnm\"\n            },\n            {\n              name: \"KPa\",\n              id: \"kpa\"\n            },\n            {\n              name: \"PSI or lb/in2\",\n              id: \"psi\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      {\n        id: \"charge\",\n        type: \"general\",\n        name: \"Charge\",\n        // in: 1,\n        from: {\n          name: \"Coulomb\",\n          id: \"c\"\n        },\n        to: {\n          name: \"Milli Coulomb\",\n          id: \"milli\"\n        },\n        units: [\n          {\n              name: \"Coulomb\",\n              id: \"c\"\n            },\n            {\n              name: \"Milli Coulomb\",\n              id: \"milli\"\n            },\n            {\n              name: \"Micro Coulomb\",\n              id: \"micro\"\n            },\n            {\n              name: \"Nano Coulomb\",\n              id: \"nano\"\n            },\n            {\n              name: \"pico Coulomb\",\n              id: \"pico\"\n            },\n            {\n              name: \"e Charge\",\n              id: \"e\"\n            },\n            {\n              name: \"Ampere Hours\",\n              id: \"amp\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      {\n        id: \"temperature\",\n        type: \"general\",\n        name: \"Temperature\",\n        from: {\n          name: \"Celsius\",\n          id: \"celsius\"\n        },\n        to: {\n          name: \"Fahrenheit\",\n          id: \"fahrenheit\"\n        },\n        units: [\n          {\n            name: \"Celsius\",\n            id: \"celsius\"\n          },\n          {\n            name: \"Fahrenheit\",\n            id: \"fahrenheit\"\n          },\n          {\n            name: \"Kelvin\",\n            id: \"kelvin\"\n          }\n        ]\n      },\n      {\n        id: \"length\",\n        type: \"general\",\n        name: \"Length\",\n        from: {\n          name: \"Kilometer\",\n          id: \"kilometer\"\n        },\n        to: {\n          name: \"Meters\",\n          id: \"meters\"\n        },\n        units: [\n          {\n            name: \"Kilometer (km)\",\n            id: \"kilometer\"\n          },\n          {\n            name: \"Meters (m)\",\n            id: \"meters\"\n          },\n          {\n            name: \"Centimeters (cm)\",\n            id: \"centimeters\"\n          },\n          {\n            name: \"Millimeters (mm)\",\n            id: \"millimeters\"\n          },\n          {\n            name: \"Miles\",\n            id: \"miles\"\n          },\n          {\n            name: \"Yards\",\n            id: \"yards\"\n          },\n          {\n            name: \"Feet\",\n            id: \"feet\"\n          },\n          {\n            name: \"Inches\",\n            id: \"inches\"\n          },\n          {\n            name: \"Nautical Miles\",\n            id: \"nauticalMiles\"\n          }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      {\n        id: \"mass\",\n        type: \"general\",\n        name: \"Mass\",\n        from: {\n          name: \"Metric Ton\",\n          id: \"metricTon\"\n        },\n        to: {\n          name: \"Kilogram\",\n          id: \"kilogram\"\n        },\n        units: [\n          {\n            name: \"Metric Ton\",\n            id: \"metricTon\"\n          },\n          {\n            name: \"Kilogram\",\n            id: \"kilogram\"\n          },\n          {\n            name: \"Gram\",\n            id: \"gram\"\n          },\n          {\n            name: \"Milligram\",\n            id: \"milligram\"\n          },\n          {\n            name: \"Mcg\",\n            id: \"mcg\"\n          },\n          {\n            name: \"Long Ton\",\n            id: \"longTon\"\n          },\n          {\n            name: \"Short Ton\",\n            id: \"shortTon\"\n          },\n          {\n            name: \"Stones\",\n            id: \"stones\"\n          },\n          {\n            name: \"Pound\",\n            id: \"pound\"\n          },\n          {\n            name: \"Ounce\",\n            id: \"ounce\"\n          }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"speed\",\n        type: \"general\",\n        name: \"Speed\",\n        from: {\n          name: \"Miles/Hour\",\n          id: \"milesHour\"\n        },\n        to: {\n          name: \"Feet/Sec\",\n          id: \"feetSec\"\n        },\n        units: [\n          {\n            name: \"Miles/Hour\",\n            id: \"milesHour\"\n          },\n          {\n            name: \"Feet/Sec\",\n            id: \"feetSec\"\n          },\n          {\n            name: \"Meters/Sec\",\n            id: \"metersSec\"\n          },\n          {\n            name: \"Km/Hour\",\n            id: \"kmHour\"\n          },\n          {\n            name: \"Knots\",\n            id: \"knots\"\n          }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"volume\",\n        type: \"general\",\n        name: \"Volume\",\n        from: {\n          name: \"US Gal\",\n          id: \"usGal\"\n        },\n        to: {\n          name: \"US Quart\",\n          id: \"usQuart\"\n        },\n        units: [\n            {\n              \"name\": \"US Gal\",\n              \"id\": \"usGal\"\n            },\n            {\n              \"name\": \"US Quart\",\n              \"id\": \"usQuart\"\n            },\n            {\n              \"name\": \"US Pint\",\n              \"id\": \"usPint\"\n            },\n            {\n              \"name\": \"US Cup\",\n              \"id\": \"usCup\"\n            },\n            {\n              \"name\": \"US Oz\",\n              \"id\": \"usOz\"\n            },\n            {\n              \"name\": \"US Tbsp.\",\n              \"id\": \"usTbsp\"\n            },\n            {\n              \"name\": \"US Tsp.\",\n              \"id\": \"usTsp\"\n            },\n            {\n              \"name\": \"Cubic Meter\",\n              \"id\": \"cubicMeter\"\n            },\n            {\n              \"name\": \"Liters\",\n              \"id\": \"liters\"\n            },\n            {\n              \"name\": \"Milliliter\",\n              \"id\": \"milliliter\"\n            },\n            {\n              \"name\": \"Imperial Gal\",\n              \"id\": \"imperialGal\"\n            },\n            {\n              \"name\": \"Imperial Quart\",\n              \"id\": \"imperialQuart\"\n            },\n            {\n              \"name\": \"Imperial Pint\",\n              \"id\": \"imperialPint\"\n            },\n            {\n              \"name\": \"Imperial Oz\",\n              \"id\": \"imperialOz\"\n            },\n            {\n              \"name\": \"Imperial Tbsp.\",\n              \"id\": \"imperialTbsp\"\n            },\n            {\n              \"name\": \"Imperial Tsp.\",\n              \"id\": \"imperialTsp\"\n            },\n            {\n              \"name\": \"Cubic Foot\",\n              \"id\": \"cubicFoot\"\n            },\n            {\n              \"name\": \"Cubic Inch\",\n              \"id\": \"cubicInch\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"area\",\n        type: \"general\",\n        name: \"Area\",\n        from: {\n          name: \"Square Km\",\n          id: \"squareKm\"\n        },\n        to: {\n          name: \"Hectare\",\n          id: \"hectare\"\n        },\n        units: [\n            {\n              \"name\": \"Square Km\",\n              \"id\": \"squareKm\"\n            },\n            {\n              \"name\": \"Hectare\",\n              \"id\": \"hectare\"\n            },\n            {\n              \"name\": \"Square Meter\",\n              \"id\": \"squareMeter\"\n            },\n            {\n              \"name\": \"Square Mile\",\n              \"id\": \"squareMile\"\n            },\n            {\n              \"name\": \"Acre\",\n              \"id\": \"acre\"\n            },\n            {\n              \"name\": \"Square Yard\",\n              \"id\": \"squareYard\"\n            },\n            {\n              \"name\": \"Square Foot\",\n              \"id\": \"squareFoot\"\n            },\n            {\n              \"name\": \"Square Inch\",\n              \"id\": \"squareInch\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"fuel_consumption\",\n        type: \"general\",\n        name: \"Fuel Consumption\",\n        from: {\n          name: \"MPG (US)\",\n          id: \"mpgUs\"\n        },\n        to: {\n          name: \"MPG (imp.)\",\n          id: \"mpgImp\"\n        },\n        units: [\n            {\n              \"name\": \"MPG (US)\",\n              \"id\": \"mpgUs\"\n            },\n            {\n              \"name\": \"MPG (imp.)\",\n              \"id\": \"mpgImp\"\n            },\n            {\n              \"name\": \"Km\\/Liter\",\n              \"id\": \"kmLiter\"\n            },\n            {\n              \"name\": \"Liter\\/100km\",\n              \"id\": \"liter100km\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"time\",\n        type: \"general\",\n        name: \"Time\",\n        from: {\n          name: \"Nanoseconds\",\n          id: \"nanoseconds\"\n        },\n        to: {\n          name: \"Microseconds\",\n          id: \"microseconds\"\n        },\n        units: [\n            {\n              \"name\": \"Nanoseconds\",\n              \"id\": \"nanoseconds\"\n            },\n            {\n              \"name\": \"Microseconds\",\n              \"id\": \"microseconds\"\n            },\n            {\n              \"name\": \"Milliseconds\",\n              \"id\": \"milliseconds\"\n            },\n            {\n              \"name\": \"Seconds\",\n              \"id\": \"seconds\"\n            },\n            {\n              \"name\": \"Minutes\",\n              \"id\": \"minutes\"\n            },\n            {\n              \"name\": \"Hours\",\n              \"id\": \"hours\"\n            },\n            {\n              \"name\": \"Days\",\n              \"id\": \"days\"\n            },\n            {\n              \"name\": \"Weeks\",\n              \"id\": \"weeks\"\n            },\n            {\n              \"name\": \"Months\",\n              \"id\": \"months\"\n            },\n            {\n              \"name\": \"Years\",\n              \"id\": \"years\"\n            },\n            {\n              \"name\": \"Decades\",\n              \"id\": \"decades\"\n            },\n            {\n              \"name\": \"Century\",\n              \"id\": \"century\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"digital_storage\",\n        type: \"general\",\n        name: \"Digital Storage\",\n        from: {\n          name: \"Bits\",\n          id: \"bits\"\n        },\n        to: {\n          name: \"Bytes\",\n          id: \"bytes\"\n        },\n        units: [\n            {\n              \"name\": \"Bits\",\n              \"id\": \"bits\"\n            },\n            {\n              \"name\": \"Bytes\",\n              \"id\": \"bytes\"\n            },\n            {\n              \"name\": \"Kilobits\",\n              \"id\": \"kilobits\"\n            },\n            {\n              \"name\": \"Kilobytes\",\n              \"id\": \"kilobytes\"\n            },\n            {\n              \"name\": \"Megabits\",\n              \"id\": \"megabits\"\n            },\n            {\n              \"name\": \"Megabytes\",\n              \"id\": \"megabytes\"\n            },\n            {\n              \"name\": \"Gigabits\",\n              \"id\": \"gigabits\"\n            },\n            {\n              \"name\": \"Gigabytes\",\n              \"id\": \"gigabytes\"\n            },\n            {\n              \"name\": \"Terabits\",\n              \"id\": \"terabits\"\n            },\n            {\n              \"name\": \"Terabytes\",\n              \"id\": \"terabytes\"\n            },\n            {\n              \"name\": \"Petabits\",\n              \"id\": \"petabits\"\n            },\n            {\n              \"name\": \"Petabytes\",\n              \"id\": \"petabytes\"\n            },\n            {\n              \"name\": \"Exabits\",\n              \"id\": \"exabits\"\n            },\n            {\n              \"name\": \"Exabytes\",\n              \"id\": \"exabytes\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"energy\",\n        type: \"general\",\n        name: \"Energy\",\n        from: {\n          name: \"Btu (th)\",\n          id: \"btuTh\"\n        },\n        to: {\n          name: \"Btu (mean)\",\n          id: \"btuMean\"\n        },\n        units: [\n            {\n              \"name\": \"Btu (th)\",\n              \"id\": \"btuTh\"\n            },\n            {\n              \"name\": \"Btu (mean)\",\n              \"id\": \"btuMean\"\n            },\n            {\n              \"name\": \"Calories (IT)\",\n              \"id\": \"caloriesIt\"\n            },\n            {\n              \"name\": \"Calories (th)\",\n              \"id\": \"caloriesTh\"\n            },\n            {\n              \"name\": \"Calories (mean)\",\n              \"id\": \"caloriesMean\"\n            },\n            {\n              \"name\": \"Calories (15C)\",\n              \"id\": \"calories15c\"\n            },\n            {\n              \"name\": \"Calories (20C)\",\n              \"id\": \"calories20c\"\n            },\n            {\n              \"name\": \"Calories (food)\",\n              \"id\": \"caloriesFood\"\n            },\n            {\n              \"name\": \"Centigrade Heat Units\",\n              \"id\": \"centigradeHeatUnits\"\n            },\n            {\n              \"name\": \"Electron Volts\",\n              \"id\": \"electronVolts\"\n            },\n            {\n              \"name\": \"Ergs\",\n              \"id\": \"ergs\"\n            },\n            {\n              \"name\": \"Foot-Pound Force\",\n              \"id\": \"footPoundForce\"\n            },\n            {\n              \"name\": \"Foot Poundals\",\n              \"id\": \"footPoundals\"\n            },\n            {\n              \"name\": \"Gigajoules\",\n              \"id\": \"gigajoules\"\n            },\n            {\n              \"name\": \"Horsepower Hours\",\n              \"id\": \"horsepowerHours\"\n            },\n            {\n              \"name\": \"Inch-Pound Force\",\n              \"id\": \"inchPoundForce\"\n            },\n            {\n              \"name\": \"Joules\",\n              \"id\": \"joules\"\n            },\n            {\n              \"name\": \"Kilocalories (IT)\",\n              \"id\": \"kilocaloriesIt\"\n            },\n            {\n              \"name\": \"Kilocalories (th)\",\n              \"id\": \"kilocaloriesTh\"\n            },\n            {\n              \"name\": \"Kilogram-Force Meters\",\n              \"id\": \"kilogramForceMeters\"\n            },\n            {\n              \"name\": \"Kilojoules\",\n              \"id\": \"kilojoules\"\n            },\n            {\n              \"name\": \"Kilowatt Hours\",\n              \"id\": \"kilowattHours\"\n            },\n            {\n              \"name\": \"Megajoules\",\n              \"id\": \"megajoules\"\n            },\n            {\n              \"name\": \"Newton Meters\",\n              \"id\": \"newtonMeters\"\n            },\n            {\n              \"name\": \"Therms\",\n              \"id\": \"therms\"\n            },\n            {\n              \"name\": \"Watt Seconds\",\n              \"id\": \"wattSeconds\"\n            },\n            {\n              \"name\": \"Watt Hours\",\n              \"id\": \"wattHours\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"power\",\n        type: \"general\",\n        name: \"Power\",\n        from: {\n          name: \"Watts\",\n          id: \"watts\"\n        },\n        to: {\n          name: \"Kilowatts\",\n          id: \"kilowatts\"\n        },\n        units: [\n            {\n              \"name\": \"Watts\",\n              \"id\": \"watts\"\n            },\n            {\n              \"name\": \"Kilowatts\",\n              \"id\": \"kilowatts\"\n            },\n            {\n              \"name\": \"Megawatts\",\n              \"id\": \"megawatts\"\n            },\n            {\n              \"name\": \"Gigawatts\",\n              \"id\": \"gigawatts\"\n            },\n            {\n              \"name\": \"Btu\\/Hour\",\n              \"id\": \"btuHour\"\n            },\n            {\n              \"name\": \"Btu\\/Minute\",\n              \"id\": \"btuMinute\"\n            },\n            {\n              \"name\": \"Btu\\/Second\",\n              \"id\": \"btuSecond\"\n            },\n            {\n              \"name\": \"Calories(th)\\/Hour\",\n              \"id\": \"caloriesthHour\"\n            },\n            {\n              \"name\": \"Calories(th)\\/Minute\",\n              \"id\": \"caloriesthMinute\"\n            },\n            {\n              \"name\": \"Calories(th)\\/Second\",\n              \"id\": \"caloriesthSecond\"\n            },\n            {\n              \"name\": \"Kilocalories(th)\\/Hour\",\n              \"id\": \"kilocaloriesthHour\"\n            },\n            {\n              \"name\": \"Kilocalories(th)\\/Minute\",\n              \"id\": \"kilocaloriesthMinute\"\n            },\n            {\n              \"name\": \"Foot Pounds-Force\\/Minute\",\n              \"id\": \"footPoundsForceMinute\"\n            },\n            {\n              \"name\": \"Foot Pounds-Force\\/Second\",\n              \"id\": \"footPoundsForceSecond\"\n            },\n            {\n              \"name\": \"Horsepowers (electric)\",\n              \"id\": \"horsepowersElectric\"\n            },\n            {\n              \"name\": \"Horsepowers (international)\",\n              \"id\": \"horsepowersInternational\"\n            },\n            {\n              \"name\": \"Horsepowers (water)\",\n              \"id\": \"horsepowersWater\"\n            },\n            {\n              \"name\": \"Horsepowers (metric)\",\n              \"id\": \"horsepowersMetric\"\n            },\n            {\n              \"name\": \"Joules\\/Hour\",\n              \"id\": \"joulesHour\"\n            },\n            {\n              \"name\": \"Joules\\/Minute\",\n              \"id\": \"joulesMinute\"\n            },\n            {\n              \"name\": \"Joules\\/Second\",\n              \"id\": \"joulesSecond\"\n            },\n            {\n              \"name\": \"Kilogram-Force Meters\\/Hour\",\n              \"id\": \"kilogramForceMetersHour\"\n            },\n            {\n              \"name\": \"Kilogram-Force Meters\\/Minute\",\n              \"id\": \"kilogramForceMetersMinute\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"force\",\n        type: \"general\",\n        name: \"Force\",\n        from: {\n          name: \"Newtons\",\n          id: \"newtons\"\n        },\n        to: {\n          name: \"Kilonewtons\",\n          id: \"kilonewtons\"\n        },\n        units: [\n            {\n              \"name\": \"Newtons\",\n              \"id\": \"newtons\"\n            },\n            {\n              \"name\": \"Kilonewtons\",\n              \"id\": \"kilonewtons\"\n            },\n            {\n              \"name\": \"Meganewtons\",\n              \"id\": \"meganewtons\"\n            },\n            {\n              \"name\": \"Dynes\",\n              \"id\": \"dynes\"\n            },\n            {\n              \"name\": \"Kilograms Force\",\n              \"id\": \"kilogramsForce\"\n            },\n            {\n              \"name\": \"Kips\",\n              \"id\": \"kips\"\n            },\n            {\n              \"name\": \"Pounds Force\",\n              \"id\": \"poundsForce\"\n            },\n            {\n              \"name\": \"Poundals\",\n              \"id\": \"poundals\"\n            },\n            {\n              \"name\": \"Sthenes (=kN)\",\n              \"id\": \"sthenes=kn\"\n            },\n            {\n              \"name\": \"Tonnes Force\",\n              \"id\": \"tonnesForce\"\n            },\n            {\n              \"name\": \"Tons Force (UK)\",\n              \"id\": \"tonsForceUk\"\n            },\n            {\n              \"name\": \"Tons Force (US)\",\n              \"id\": \"tonsForceUs\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      },\n      { \n        id: \"electric_current\",\n        type: \"general\",\n        name: \"Electric Current\",\n        from: {\n          name: \"Abampere\",\n          id: \"abampere\"\n        },\n        to: {\n          name: \"Ampere\",\n          id: \"ampere\"\n        },\n        units: [\n            {\n              \"name\": \"Abampere\",\n              \"id\": \"abampere\"\n            },\n            {\n              \"name\": \"Ampere\",\n              \"id\": \"ampere\"\n            },\n            {\n              \"name\": \"Biot\",\n              \"id\": \"biot\"\n            },\n            {\n              \"name\": \"Centiampere\",\n              \"id\": \"centiampere\"\n            },\n            {\n              \"name\": \"Coulomb\\/Second\",\n              \"id\": \"coulombSecond\"\n            },\n            {\n              \"name\": \"EMU Of Current\",\n              \"id\": \"emuOfCurrent\"\n            },\n            {\n              \"name\": \"ESU Of Current\",\n              \"id\": \"esuOfCurrent\"\n            },\n            {\n              \"name\": \"Franklin\\/Second\",\n              \"id\": \"franklinSecond\"\n            },\n            {\n              \"name\": \"Gaussian Electric Current\",\n              \"id\": \"gaussianElectricCurrent\"\n            },\n            {\n              \"name\": \"Gigaampere\",\n              \"id\": \"gigaampere\"\n            },\n            {\n              \"name\": \"Gilbert\",\n              \"id\": \"gilbert\"\n            },\n            {\n              \"name\": \"Kiloampere\",\n              \"id\": \"kiloampere\"\n            },\n            {\n              \"name\": \"Megaampere\",\n              \"id\": \"megaampere\"\n            },\n            {\n              \"name\": \"Microampere\",\n              \"id\": \"microampere\"\n            },\n            {\n              \"name\": \"Milliampere\",\n              \"id\": \"milliampere\"\n            },\n            {\n              \"name\": \"Milliamp\",\n              \"id\": \"milliamp\"\n            },\n            {\n              \"name\": \"Manoampere\",\n              \"id\": \"manoampere\"\n            },\n            {\n              \"name\": \"Picoampere\",\n              \"id\": \"picoampere\"\n            },\n            {\n              \"name\": \"Siemens Volt\",\n              \"id\": \"siemensVolt\"\n            },\n            {\n              \"name\": \"Statampere\",\n              \"id\": \"statampere\"\n            },\n            {\n              \"name\": \"Teraampere\",\n              \"id\": \"teraampere\"\n            },\n            {\n              \"name\": \"Volt\\/Ohm\",\n              \"id\": \"voltOhm\"\n            },\n            {\n              \"name\": \"Watt\\/Volt\",\n              \"id\": \"wattVolt\"\n            },\n            {\n              \"name\": \"Weber\\/Henry\",\n              \"id\": \"weberHenry\"\n            }\n        ],\n        input_type: {\n          from: {\n            type: 'tel'\n          },\n          to: {\n            type: 'tel'\n          }\n        }\n      }\n    ];\n\n    export async function getStaticPaths() {\n      const tools =[ \n        {name:\"area\",display:\"Area\",id:5,type:\"conversions\",category:\"conversion\"},\n      {name:\"force\",display:\"Force\",id:6,type:\"conversions\",category:\"conversion\"},\n      {name:\"energy\",display:\"Energy\",id:7,type:\"conversions\",category:\"conversion\"},\n      {name:\"fuel_consumption\",display:\"Fuel Consumption\",id:8,type:\"conversions\",category:\"conversion\"},\n        {name:\"time\",display:\"Time\",id:9,type:\"conversions\",category:\"conversion\"},\n        {name:\"mass\",display:\"Mass\",id:10,type:\"conversions\",category:\"conversion\"},\n        {name:\"length\",display:\"Length\",id:11,type:\"conversions\",category:\"conversion\"},\n        {name:\"digital_storage\",display:\"Data Storage\",id:12,type:\"conversions\",category:\"conversion\"},\n\n        {name:\"temperature\",display:\"Temperature\",id:16,type:\"conversions\",category:\"conversion\"},\n      {name:\"electric_current\",display:\"Current\",id:18,type:\"conversions\",category:\"conversion\"},\n        {name:\"volume\",display:\"Volume\",id:36,type:\"conversions\",category:\"conversion\"},\n        {name:\"pressure\",display:\"Pressure\",id:37,type:\"conversions\",category:\"conversion\"},\n        {name:\"speed\",display:\"Speed\",id:38,type:\"conversions\",category:\"conversion\"},\n        {name:\"power\",display:\"Power\",id:39,type:\"conversions\",category:\"conversion\"},\n          {name:\"charge\",display:\"Charge\",id:45,type:\"conversions\",category:\"conversion\"},\n      ]\n      \n      const paths = tools.map((post) =>  ({\n        params: {name :stringSpaceToHyphen( post.name) }\n      }))\n      \n        return {\n            paths: paths, fallback: false // See the \"fallback\" section below\n        };\n      }\n      export async function getStaticProps({ params }) {\n        // params contains the post `id`.\n        // If the route is like /posts/1, then params.id is 1\n        const res = [\n          {stringId:\"1\",a:0,b:20,name:\"mA\",display:\"0-20 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"},\n          {stringId:\"2\",a:4,b:20,name:\"mA\",display:\"4-20 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 4 to 20 milliamps, and display a 4-20mA conversion scale for the chosen measurement range.\"},\n          {stringId:\"3\",a:0,b:25,name:\"mA\",display:\"0-25 mA\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 25 milliamps, and display a 0-25mA conversion scale for the chosen measurement range.\"},\n          {stringId:\"0\",a:3,b:15,name:\"PSI\",display:\"3-15 PSI\",desc:\"This measurement to current converter tool will convert any linear input measurement reading into the ideal current output signal over a linear range of 0 to 20 milliamps, and display a 0-20mA conversion scale for the chosen measurement range.\"},\n        ]\n          \n        const tools =[ \n          {name:\"3-15 PSI\",display:\"3-15 PSI\",id:0,type:\"instrumentation\",category:\"instrumentation\"},\n        {name:\"0-20mA\",display:\"0-20 mA\",id:1,type:\"instrumentation\",category:\"instrumentation\"},\n        {name:\"4-20mA\",display:\"4-20 mA\",id:2,type:\"instrumentation\",category:\"instrumentation\"},\n        {name:\"0-25mA\",display:\"0-25 mA\",id:3,type:\"instrumentation\",category:\"instrumentation\"},\n         {name:\"zero\",display:\"0-X to % (Conversion)\",id:4,type:\"instrumentation\",category:\"zero\"},\n        {children:\"brightness_1\",name:\"area\",display:\"Area\",id:5,type:\"conversions\",category:\"conversion\"},\n        {children:\"chat\",name:\"force\",display:\"Force\",id:6,type:\"conversions\",category:\"conversion\"},\n        {name:\"energy\",display:\"Energy\",id:7,type:\"conversions\",category:\"conversion\"},\n        {name:\"fuel_consumption\",display:\"Fuel Consumption\",id:8,type:\"conversions\",category:\"conversion\"},\n          {name:\"time\",display:\"Time\",id:9,type:\"conversions\",category:\"conversion\"},\n          {name:\"mass\",display:\"Mass\",id:10,type:\"conversions\",category:\"conversion\"},\n          {name:\"length\",display:\"Length\",id:11,type:\"conversions\",category:\"conversion\"},\n          {name:\"digital_storage\",display:\"Data Storage\",id:12,type:\"conversions\",category:\"conversion\"},\n          {name:\"resistancetemp\",display:\"Resistance (from temperature)\",id:13,type:\"instrumentation\",category:\"electrical\"},\n          {name:\"linearma\",display:\"Linear mA to Square Root mA\",id:14,type:\"instrumentation\",category:\"electrical\"},\n          {name:\"temperature\",display:\"Temperature (from resistance)\",id:15,type:\"instrumentation\",category:\"electrical\"},\n          {name:\"temperature\",display:\"Temperature\",id:16,type:\"conversions\",category:\"conversion\"},\n        {name:\"linear\",display:\"Linear to Square Root percentage\",id:17,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"electric_current\",display:\"Current\",id:18,type:\"conversions\",category:\"conversion\"},\n        {name:\"ohms\", display:\"Ohms law (R)\",id:19, stringId:\"19\",type:\"electrical\",category:\"electrical\"},\n        {name:\"ohmsi\",display:\"Ohms law (I)\",id:20,type:\"electrical\",category:\"electrical\"},{\n          name:\"aircore\",display:\"Air Core Inductance\",id:21,type:\"electrical\",category:\"electrical\"},{\n          name:\"laser\",display:\"Laser Real-Time Converter\",id:22,type:\"electrical\",category:\"electrical\"},{\n          name:\"ohmsv\",display:\"Ohms Law (V)\",id:23,type:\"electrical\",category:\"electrical\"},{\n          name:\"parallel\",display:\"Parallel Resistance\",id:24,type:\"electrical\",category:\"electrical\"},{\n          name:\"velocitysound\",display:\"Velocity of Sound\",id:25,type:\"electrical\",category:\"electrical\"},\n          {name:\"lcresonance\",display:\"LC Resonance\",id:26,type:\"electrical\",category:\"electrical\"},\n          {name:\"voltagediv\",display:\"Voltage Divider\",id:27, type:\"electrical\",category:\"electrical\"},\n          {name:\"speedtime\",display:\"Time (Speed)\",id:28,type:\"extra\",category:\"electrical\"}, {\n          name:\"wheat\",display:\"Wheatstone bridge\",id:29,type:\"electrical\",category:\"electrical\"}, {\n          name:\"color\",display:\"Color code Resistance\",id:30,type:\"electrical\",category:\"color\"},\n          {name:\"powerrv\",display:\"Power (with R,V)\",id:31, stringId:\"31\",type:\"electrical\",category:\"electrical\"},\n          {name:\"powervi\",display:\"Power (with V,I)\",id:32,type:\"electrical\" ,category:\"electrical\"},\n          {name:\"frequency\",display:\"Frequency\",id:33,type:\"electrical\",category:\"electrical\"},\n          {name:\"speedspeed\",display:\"Speed\",id:34,type:\"extra\",category:\"electrical\"},\n          {name:\"distance\",display:\"Distance (Speed)\",id:35,type:\"extra\",category:\"electrical\"},\n          {name:\"volume\",display:\"Volume\",id:36,type:\"conversions\",category:\"conversion\"},\n          {name:\"pressure\",display:\"Pressure\",id:37,type:\"conversions\",category:\"conversion\"},\n          {name:\"speed\",display:\"Speed\",id:38,type:\"conversions\",category:\"conversion\"},\n          {name:\"power\",display:\"Power\",id:39,type:\"conversions\",category:\"conversion\"},\n          {name:\"powerir\", display:\"Power (with R,I)\",id:40,type:\"electrical\",category:\"electrical\"},{\n          name:\"wavelength\",display:\"Wavelength\",id:41,type:\"extra\",category:\"electrical\"},{\n          name:\"powerline\",display:\"Power Factor 3Phase (Line)\",id:42,type:\"electrical\",category:\"electrical\"},{\n          name:\"powerneutral\",display:\"Power Factor 3Phase (neutral)\",id:43,type:\"electrical\",category:\"electrical\"},\n         {name:\"power\",display:\"Power Factor Single Phase\",id:44, stringId:\"44\",type:\"electrical\",category:\"electrical\"},{\n          name:\"charge\",display:\"Charge\",id:45,type:\"conversions\",category:\"conversion\"},\n          {name:\"speedhorse\",display:\"Speed (Horsepower)\",id:46, stringId:\"46\",type:\"electrical\",category:\"electrical\"},\n          {name:\"torque\",display:\"Torque (HorsePower)\",id:47,type:\"electrical\",category:\"electrical\"},\n          {name:\"horsepower\",display:\"HorsePower\",id:48,type:\"electrical\",category:\"electrical\"},  \n        {name:\"twoseals\",display:\"Level measurement Two Seals\",id:49,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"onesealabove\",display:\"Level measurement one seal above\",id:50,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"onesealbelow\",display:\"Level measurement one seal below\",id:51,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"bubblelevel\",display:\"Bubble Level\",id:52,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"bubbleinterface\",display:\"Bubble Interface\",id:53,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"twosealint\",display:\"Two Seal Interface\",id:54,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"opentank\",display:\"Open Tank\",id:55,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"intwet\",display:\"Interface Wet Leg\",id:56,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"liquidpurge\",display:\"Liquid Purge\",id:57,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"LT3\",display:\"Level Transmission Closed Vessel\",id:58,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"short\",display:\"Short Circuit Calculation\",id:59,type:\"electrical\",category:\"electrical\"},\n        {name:\"transformer\",display:\"Transformer Fault Current\",id:60,type:\"electrical\",category:\"electrical\"},\n        {name:\"DOL\",display:\"DOL Star & Delta\",id:61,type:\"electrical\",category:\"electrical\"},\n        {name:\"flowrate\",display:\"Flow Rate Calculation\",id:62,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"hydrost\",display:\"Hydrostatic Level\",id:63,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"orifice\",display:\"Orifice Plate error\",id:64,type:\"instrumentation\",category:\"electrical\"},\n        {name:\"lb\",display:\"LbIn to Nm\",id:65,type:\"electrical\",category:\"electrical\"},\n        {name:\"nm\",display:\"Nm to LbIn\",id:66,type:\"electrical\",category:\"electrical\"},\n        {name:\"dcmotor\",display:\"DC Motor horsepower\",id:67,type:\"electrical\",category:\"electrical\"},\n        {name:\"eff1\",display:\"Eff Tension from HP & FPM\",id:68,type:\"electrical\",category:\"electrical\"},\n        {name:\"eff2\",display:\"Eff Tension from Torque and Radius\",id:69,type:\"electrical\",category:\"electrical\"},]\n        \n        const tooltype = [{id:1,type:\"instrumentation\",name:\"INSTRUMENTATION\",show:false},\n                        {id:2,type:\"electrical\",name:\"ELECTRICAL\",show:false},\n                        {id:3,type:\"conversions\",name:\"UNIT CONVERSION\",show:false}]\n                          \n        // Pass post data to the page via props\n        return { props: { names:tools,toolType:tooltype ,params:params} }\n      }\n      "]},"metadata":{},"sourceType":"module"}