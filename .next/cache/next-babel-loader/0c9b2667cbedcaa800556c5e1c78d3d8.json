{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Select, Row, Col, Button } from 'antd';\nimport Navbar from '../../Navbar';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { Tabs, Drawer } from 'antd';\nimport SideNav from '../../SideNav';\nimport DrawerNav from '../../DrawerNav';\n\nvar Colorcode = function Colorcode(_ref) {\n  var names = _ref.names,\n      toolType = _ref.toolType;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDrawer = function showDrawer() {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  var router = useRouter();\n\n  var onClose = function onClose() {\n    setVisible(false);\n  };\n\n  React.useEffect(function () {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n  var Option = Select.Option;\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      f = _React$useState4[0],\n      setf = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      s = _React$useState6[0],\n      sets = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      t = _React$useState8[0],\n      sett = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      w = _React$useState10[0],\n      setw = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      answer1 = _React$useState12[0],\n      setAnswer1 = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      answer2 = _React$useState14[0],\n      setAnswer2 = _React$useState14[1];\n\n  var calculate = function calculate() {\n    var ra = Number(f) * 10 + Number(s);\n    var x = Number(t);\n    var y = Math.pow(10, x);\n    setAnswer1(ra * y);\n    setAnswer2(Number(w));\n  };\n\n  var descp = \"\";\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, router !== undefined && router.query.name), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\"\n  }), __jsx(\"meta\", {\n    key: \"description\",\n    name: \"description\",\n    content: descp\n  })), __jsx(Navbar, {\n    showDrawer: showDrawer\n  }), __jsx(\"div\", {\n    className: \"tools-container\"\n  }, __jsx(Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType\n  })), __jsx(\"div\", {\n    className: \"tools-left\"\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType\n  })), __jsx(\"div\", {\n    className: \"toolbox-layout\"\n  }, __jsx(\"div\", {\n    className: \"toolbox\"\n  }, __jsx(\"div\", {\n    className: \"heading\"\n  }, \"Color Code Resistance\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"toolbox-desc\"\n  }, __jsx(\"div\", {\n    className: \"heading\"\n  }, \"Calculation\"), __jsx(Row, null, __jsx(Col, {\n    span: 12\n  }, \"First strip\"), __jsx(Col, {\n    span: 12\n  }, __jsx(Select, {\n    style: {\n      width: 120\n    },\n    value: f,\n    onSelect: function onSelect(e) {\n      return setf(e);\n    }\n  }, __jsx(Option, {\n    value: \"0\"\n  }, \"Black\"), __jsx(Option, {\n    value: \"1\"\n  }, \"Brown\"), __jsx(Option, {\n    value: \"2\"\n  }, \"Red\"), __jsx(Option, {\n    value: \"3\"\n  }, \"Orange\"), __jsx(Option, {\n    value: \"4\"\n  }, \"Yellow\"), __jsx(Option, {\n    value: \"5\"\n  }, \"Green\"), __jsx(Option, {\n    value: \"6\"\n  }, \"Blue\"), __jsx(Option, {\n    value: \"7\"\n  }, \"Violet\"), __jsx(Option, {\n    value: \"8\"\n  }, \"Gray\"), __jsx(Option, {\n    value: \"9\"\n  }, \"White\")))), __jsx(Row, null, __jsx(Col, {\n    span: 12\n  }, \"Second strip\"), __jsx(Col, {\n    span: 12\n  }, __jsx(Select, {\n    style: {\n      width: 120\n    },\n    value: s,\n    onSelect: function onSelect(e) {\n      return sets(e);\n    }\n  }, __jsx(Option, {\n    value: \"0\"\n  }, \"Black\"), __jsx(Option, {\n    value: \"1\"\n  }, \"Brown\"), __jsx(Option, {\n    value: \"2\"\n  }, \"Red\"), __jsx(Option, {\n    value: \"3\"\n  }, \"Orange\"), __jsx(Option, {\n    value: \"4\"\n  }, \"Yellow\"), __jsx(Option, {\n    value: \"5\"\n  }, \"Green\"), __jsx(Option, {\n    value: \"6\"\n  }, \"Blue\"), __jsx(Option, {\n    value: \"7\"\n  }, \"Violet\"), __jsx(Option, {\n    value: \"8\"\n  }, \"Gray\"), __jsx(Option, {\n    value: \"9\"\n  }, \"White\")))), __jsx(Row, null, __jsx(Col, {\n    span: 12\n  }, \"Third strip\"), __jsx(Col, {\n    span: 12\n  }, __jsx(Select, {\n    style: {\n      width: 120\n    },\n    value: t,\n    onSelect: function onSelect(e) {\n      return sett(e);\n    }\n  }, __jsx(Option, {\n    value: \"0\"\n  }, \"Black\"), __jsx(Option, {\n    value: \"1\"\n  }, \"Brown\"), __jsx(Option, {\n    value: \"2\"\n  }, \"Red\"), __jsx(Option, {\n    value: \"3\"\n  }, \"Orange\"), __jsx(Option, {\n    value: \"4\"\n  }, \"Yellow\"), __jsx(Option, {\n    value: \"5\"\n  }, \"Green\"), __jsx(Option, {\n    value: \"6\"\n  }, \"Blue\"), __jsx(Option, {\n    value: \"7\"\n  }, \"Violet\"), __jsx(Option, {\n    value: \"8\"\n  }, \"Gray\"), __jsx(Option, {\n    value: \"9\"\n  }, \"White\")))), __jsx(Row, null, __jsx(Col, {\n    span: 12\n  }, \"Fourth strip\"), __jsx(Col, {\n    span: 12\n  }, __jsx(Select, {\n    style: {\n      width: 120\n    },\n    value: w,\n    onSelect: function onSelect(e) {\n      return setw(e);\n    }\n  }, __jsx(Option, {\n    value: \"5\"\n  }, \"Gold\"), __jsx(Option, {\n    value: \"10\"\n  }, \"Silver\"), __jsx(Option, {\n    value: \"20\"\n  }, \"None\"))))), __jsx(Button, {\n    \"class\": \"calculate-button\",\n    onClick: function onClick() {\n      return calculate();\n    }\n  }, \"CALCULATE\"), answer1 !== undefined && __jsx(\"div\", {\n    \"class\": \"result\"\n  }, __jsx(\"div\", {\n    className: \"resultheading\"\n  }, \"RESULT\"), answer1, \" Ohm  \", answer2, \"%\"), __jsx(\"div\", {\n    className: \"description\"\n  }, \"Components and wires are coded with colors to identify their value and function.\", __jsx(\"br\", null), \"Resistor Color Coding uses colored bands to quickly identify a resistors resistive value and its percentage of tolerance with the physical size of the resistor indicating its wattage rating.\"))))));\n};\n\nexport var __N_SSG = true;\nexport default Colorcode;","map":null,"metadata":{},"sourceType":"module"}