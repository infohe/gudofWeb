{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nvar _jsxFileName = \"/home/fazna/gudofWeb/pages/Mechanical/[name].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { names, toolType } from '../index';\nimport Head from 'next/head';\nimport { stringSpaceToHyphen } from '..';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport Functions from '../components/Functions';\nimport Navbar from '../Navbar';\nexport default function Mechanical({\n  params,\n  toolType,\n  names\n}) {\n  const router = useRouter();\n  const [visible, setVisible] = React.useState(false);\n\n  const showDrawer = () => {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  React.useEffect(() => {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n  const [id, setId] = React.useState();\n  const [category, setCategory] = React.useState();\n  React.useEffect(() => {\n    if (router && router.query) {\n      names.map(item => {\n        if (stringSpaceToHyphen(item.display) === router.query.name) {\n          setId(item.id);\n          setCategory(item.category);\n          console.log(item.category);\n        }\n      });\n    }\n  }, [router, router.query]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, router.query.name, \" Mechanical Tools\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), functions !== undefined && functions.map(item => stringSpaceToHyphen(item.display) === router.query.name && __jsx(\"meta\", {\n    key: \"description\",\n    name: \"description\",\n    content: item.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }\n  }))), __jsx(Navbar, {\n    showDrawer: showDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"tools-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType,\n    onClose: () => setVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"tools-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType,\n    key2: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Functions, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))));\n}\nexport async function getStaticPaths() {\n  const tools = [{\n    display: \"Belt Length\"\n  }, {\n    display: \"Gear Pump Displacement\"\n  }, {\n    display: \"Stroke's Law\"\n  }, {\n    display: \"Flow Velocity\"\n  }, {\n    display: \"Hooke's Law (Force)\"\n  }, {\n    display: \"Hooke's Law (Spring constant)\"\n  }, {\n    display: \"Strain\"\n  }, {\n    display: \"K Value & Pipe Length\"\n  }, {\n    display: \"Young's modulus\"\n  }, {\n    display: \"Weber Number\"\n  }, {\n    display: \"Chezy Coefficient\"\n  }, {\n    display: \"Cauchy Number\"\n  }, {\n    display: \"Bulk Modulus Elasticity\"\n  }];\n  const paths = tools.map(post => ({\n    params: {\n      name: stringSpaceToHyphen(post.display)\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: false // See the \"fallback\" section below\n\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // Pass post data to the page via props\n  return {\n    props: {\n      names: names,\n      toolType: toolType,\n      params: params\n    }\n  };\n}","map":{"version":3,"sources":["/home/fazna/gudofWeb/pages/Mechanical/[name].js"],"names":["useRouter","names","toolType","Head","stringSpaceToHyphen","SideNav","DrawerNav","Functions","Navbar","Mechanical","params","router","visible","setVisible","React","useState","showDrawer","window","innerWidth","onClose","useEffect","id","setId","category","setCategory","query","map","item","display","name","console","log","functions","undefined","desc","getStaticPaths","tools","paths","post","fallback","getStaticProps","props"],"mappings":"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","sourcesContent":["\nimport {Layout} from 'antd'\nimport { useRouter } from 'next/router'\nimport {names,toolType} from '../index'\nimport Head from 'next/head'\nimport { Drawer } from 'antd';\nimport { stringSpaceToHyphen } from '..';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport Functions from '../components/Functions'\nimport Navbar from '../Navbar'\n\nexport default function Mechanical({params,toolType,names}){\n    const router = useRouter()\n  const [visible, setVisible] = React.useState(false);\n  const showDrawer = () => {\n    if(window.innerWidth<=700)\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n  React.useEffect(()=>{\n    if(window.innerWidth>700)\n      setVisible(false)\n  })\n  const [id,setId] =React.useState() \n  const [category,setCategory] = React.useState()\n      React.useEffect(()=> {\n        if(router && router.query) {\n          \n         names.map(\n             item=>{if( stringSpaceToHyphen(item.display)===router.query.name) {\n                                 setId(item.id) \n                    setCategory(item.category)\n                     console.log(item.category)\n             }}\n         )\n        }\n      }, [router,router.query])\n\n\n      \n    \n    \n    return(\n      <div>\n        <Head>\n          <title>{router.query.name} Mechanical Tools</title>\n          <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"/>\n          \n          {functions!==undefined && functions.map(item => stringSpaceToHyphen(item.display) === router.query.name\n          && <meta key=\"description\" name=\"description\"content={item.desc}/>) }\n        </Head>\n        <Navbar showDrawer={showDrawer}/>\n\n    \n        <div className=\"tools-container\">\n            {/* sliding drawer */}\n            <Drawer width={350} title=\"gudofConvert\" placement=\"left\" closable={true} onClose={onClose} visible={visible}>\n              <DrawerNav names={names} toolType={toolType} onClose={()=>setVisible(false)}/>\n            </Drawer>\n\n            {/* fixed side menu */}\n            <div className=\"tools-left\">\n              <SideNav names={names} toolType={toolType} key2={\"4\"}/>\n            </div>\n\n            {/* toolpart */}\n            <Layout className=\"toolbox-layout\">\n            \n\n                    <Functions id={id}/>\n                   \n               </Layout>\n           </div>\n        </div>\n    )\n}\n\nexport async function getStaticPaths() {\n    const tools = [\n      \n              {display:\"Belt Length\"},\n              {display:\"Gear Pump Displacement\"},\n              {display:\"Stroke's Law\"},\n              {display:\"Flow Velocity\"},\n              {display:\"Hooke's Law (Force)\"},\n              {display:\"Hooke's Law (Spring constant)\"},\n              {display:\"Strain\"},\n              {display:\"K Value & Pipe Length\"},\n              {display:\"Young's modulus\"},\n              {display:\"Weber Number\"},\n              {display:\"Chezy Coefficient\"},\n              {display:\"Cauchy Number\"},\n              {display:\"Bulk Modulus Elasticity\"},  \n    ]\n\n\n  const paths =  tools.map((post) => ({\n    params: {name :stringSpaceToHyphen(post.display) }\n  }))\n  \n    return {\n        paths: paths, fallback: false // See the \"fallback\" section below\n    };\n  }\n  export async function getStaticProps({ params }) {\n                 \n    // Pass post data to the page via props\n    return { props: { names:names,toolType:toolType ,params:params} }\n  }\n  "]},"metadata":{},"sourceType":"module"}