{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar _jsxFileName = \"/home/fazna/gudofWeb/pages/SideNav.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nconst {\n  TabPane\n} = _Tabs;\nimport Link from 'next/link';\nimport { stringSpaceToHyphen } from '.';\nimport { useRouter } from 'next/router';\nexport default function SideNav({\n  names,\n  toolType,\n  key2\n}) {\n  const [array, setArray] = React.useState(names);\n  const [ToolType, setTooltype] = React.useState(toolType);\n\n  const handleChangeTrue = () => {\n    let newTooltype = ToolType;\n    newTooltype.map(item => item.show = true);\n    setTooltype(newTooltype);\n  };\n\n  React.useEffect(() => console.log(\"type\", ToolType));\n\n  const handleSearch = event => {\n    handleChangeTrue();\n    setArray(tools.filter(item => event.target.value !== \"\" && item.display.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1));\n    if (event.target.value === \"\") setArray(tools);\n    console.log(array);\n  };\n\n  const [tools, setTools] = React.useState(names);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(_Tabs, {\n    style: {\n      marginTop: \"60px\"\n    },\n    tabPosition: \"top\",\n    defaultActiveKey: key2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, ToolType !== undefined && ToolType.map(type => __jsx(TabPane, {\n    tab: type.name,\n    key: type.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"20px\",\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(_Input, {\n    style: {\n      marginLeft: \"10px\",\n      marginRight: \"30px\"\n    },\n    placeholder: \"Search\",\n    prefix: __jsx(\"i\", {\n      style: {\n        marginTop: \"-5px\"\n      },\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 106\n      }\n    }, \"search\"),\n    onInput: e => handleSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }), __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, array.map(item => item.type === type.type && __jsx(React.Fragment, null, item.type === 'instrumentation' && __jsx(Link, {\n    href: `../../Instrumentation/${stringSpaceToHyphen(item.display)}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }, __jsx(_Card, {\n    className: `${item.category === \"conversion\" ? active(item.name) : active(item.display)}`,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, item.display)), item.type === 'electrical' && __jsx(Link, {\n    href: `../../Electrical/${stringSpaceToHyphen(item.display)}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(_Card, {\n    className: `${item.category === \"conversion\" ? active(item.name) : active(item.display)}`,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 2\n    }\n  }, item.display), \"                      \"), item.type === 'conversions' && __jsx(Link, {\n    href: `../../Conversion/${item.name}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, __jsx(_Card, {\n    className: `${item.category === \"conversion\" ? active(item.name) : active(item.display)}`,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }\n  }, item.display)), item.type === 'mechanical' && __jsx(Link, {\n    href: `../../Mechanical/${stringSpaceToHyphen(item.display)}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, __jsx(_Card, {\n    className: `${item.category === \"conversion\" ? active(item.name) : active(item.display)}`,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }\n  }, item.display)))))))))));\n}\nexport const active = name => {\n  const router = useRouter();\n\n  if (router.query.name === stringSpaceToHyphen(name)) {\n    return \"activecard\";\n  } else return \"carditems1\";\n};","map":{"version":3,"sources":["/home/fazna/gudofWeb/pages/SideNav.js"],"names":["React","TabPane","Link","stringSpaceToHyphen","useRouter","SideNav","names","toolType","key2","array","setArray","useState","ToolType","setTooltype","handleChangeTrue","newTooltype","map","item","show","useEffect","console","log","handleSearch","event","tools","filter","target","value","display","toLowerCase","indexOf","setTools","marginTop","undefined","type","name","id","marginLeft","marginRight","e","category","active","flex","router","query"],"mappings":"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","sourcesContent":["import { Card, Row,Input,Layout, Button } from 'antd';\nimport React from 'react';\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\nimport Link from 'next/link'\nimport { stringSpaceToHyphen } from '.';\nimport { useRouter } from 'next/router'\n\nexport default function SideNav({names , toolType,key2}) {\n  \n\n\n  const [array,setArray] = React.useState(names)\n  const  [ToolType,setTooltype] = React.useState(toolType)    \n  const handleChangeTrue = () => {\n    let newTooltype = ToolType\n    newTooltype.map(item=>item.show =true)\n    setTooltype(newTooltype)\n}\n  \n React.useEffect(()=>console.log(\"type\",ToolType))\n  const handleSearch = (event) => {\n    handleChangeTrue()\n    setArray(tools.filter((item) => ((event.target.value!== \"\") && item.display.toLowerCase().indexOf(event.target.value.toLowerCase())!== -1) ))\n    if(event.target.value ===\"\")\n       setArray(tools)\n       console.log(array)\n  }\n  const [tools,setTools] = React.useState(names)\n    return (\n    <div>\n      \n        {/* hello\n        <Button onClick={console.log(ToolType)}>Click</Button> */}\n      <Layout>\n      <Tabs  style={{marginTop:\"60px\"}} tabPosition=\"top\" defaultActiveKey={key2}>  \n        {ToolType!==undefined &&\n          ToolType.map(\n            (type) =>  <TabPane tab={type.name} key={type.id}>\n                <div style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\n            \n                      <Input style={{marginLeft:\"10px\",marginRight:\"30px\"}} placeholder=\"Search\" prefix={<i style={{marginTop:\"-5px\"}} className=\"material-icons\">search</i>} onInput={(e)=>handleSearch(e)} />\n                    <Row >\n                      \n                    {array.map(item=> item.type === type.type &&\n                    <>\n                       {item.type === 'instrumentation' &&\n                       \n                          <Link href={`../../Instrumentation/${stringSpaceToHyphen(item.display)}`} passHref>\n                            <Card className={`${item.category===\"conversion\" ? active(item.name) : active(item.display) }`} style={{flex:1}}>\n\n                             {item.display}</Card>\n                      </Link>  }\n                      {item.type === 'electrical' &&\n                        <Link href={`../../Electrical/${stringSpaceToHyphen(item.display)}`} passHref>\n <Card className={`${item.category===\"conversion\" ? active(item.name) : active(item.display) }`} style={{flex:1}}>\n\n                             {item.display}</Card>                      </Link> }\n                      {item.type === 'conversions' &&\n                        <Link href={`../../Conversion/${item.name}`} passHref>\n                          \n                          <Card className={`${item.category===\"conversion\" ? active(item.name) : active(item.display) }`} style={{flex:1}}>\n\n{item.display}</Card>\n                      </Link> }\n                      {item.type === 'mechanical' &&\n                        <Link href={`../../Mechanical/${stringSpaceToHyphen(item.display)}`} passHref>\n                           <Card className={`${item.category===\"conversion\" ? active(item.name) : active(item.display) }`} style={{flex:1}}>\n\n{item.display}</Card>\n                      </Link> }\n                    \n                     </>)}\n                    \n                     </Row></div>\n                                       </TabPane>\n          )\n        }\n        </Tabs>\n        </Layout>\n        \n      </div>\n   \n\n\n  )\n}\n\n\nexport const active = (name) => {\n  const router = useRouter()\n\n  if(router.query.name === stringSpaceToHyphen(name)){\n   \n    return \"activecard\"\n  }\n  else return \"carditems1\"\n}"]},"metadata":{},"sourceType":"module"}