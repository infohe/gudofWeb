{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\n\nvar _jsxFileName = \"/home/fazna/gudofWeb/pages/DrawerNav.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nvar TabPane = _Tabs.TabPane;\nimport Link from 'next/link';\nexport default function DrawerNav(_ref) {\n  _s();\n\n  var _this = this;\n\n  var names = _ref.names,\n      toolType = _ref.toolType;\n\n  var _React$useState = React.useState(names),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      array = _React$useState2[0],\n      setArray = _React$useState2[1];\n\n  var _React$useState3 = React.useState(toolType),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ToolType = _React$useState4[0],\n      setTooltype = _React$useState4[1];\n\n  var handleChangeTrue = function handleChangeTrue() {\n    var newTooltype = ToolType;\n    newTooltype.map(function (item) {\n      return item.show = true;\n    });\n    setTooltype(newTooltype);\n  };\n\n  var handleShow = function handleShow(id) {\n    var newTooltype = ToolType;\n    newTooltype.map(function (item) {\n      return item.id === id && (item.show = !item.show);\n    });\n    setTooltype(newTooltype);\n    console.log(ToolType);\n    setBool(!bool);\n  };\n\n  var handleSearch = function handleSearch(event) {\n    handleChangeTrue();\n    setArray(tools.filter(function (item) {\n      return event.target.value !== \"\" && item.display.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1;\n    }));\n    if (event.target.value === \"\") setArray(tools);\n    console.log(array);\n  };\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      bool = _React$useState6[0],\n      setBool = _React$useState6[1];\n\n  var _React$useState7 = React.useState(names),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      tools = _React$useState8[0],\n      setTools = _React$useState8[1];\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(_Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(_Input, {\n    placeholder: \"Search\",\n    prefix: __jsx(\"i\", {\n      style: {\n        marginTop: \"-5px\"\n      },\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 43\n      }\n    }, \"search\"),\n    onInput: function onInput(e) {\n      return handleSearch(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), ToolType !== undefined && ToolType.map(function (type) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick() {\n        return handleShow(type.id);\n      },\n      style: {\n        display: \"flex\",\n        height: \"45px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        flex: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, type.name), __jsx(\"i\", {\n      style: {\n        flex: 1\n      },\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"arrow_drop_down\")), type.show === true && __jsx(\"div\", {\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }\n    }, __jsx(_Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, array.map(function (item) {\n      return item.type === type.type && __jsx(_Card, {\n        className: \"carditems cardwidth\",\n        style: {\n          width: \"300px\",\n          flex: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }\n      }, item.category === 'instrumentation' && __jsx(Link, {\n        href: \"sliderTool/\".concat(item.display, \"/\").concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, item.display)), item.category === 'zero' && __jsx(Link, {\n        href: \"zerotox/\".concat(item.display, \"/\").concat(item.id),\n        as: process.env.BACKEND_URL + \"zerotox/\".concat(item.display, \"/\").concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, item.display)), item.category === 'electrical' && __jsx(Link, {\n        href: \"functions/\".concat(item.display, \"/\").concat(item.id),\n        as: process.env.BACKEND_URL + \"functions/\".concat(item.display, \"/\").concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, item.display)), item.category === 'conversion' && __jsx(Link, {\n        href: \"conversion/\".concat(item.display, \"/\").concat(item.name),\n        as: process.env.BACKEND_URL + \"conversion/\".concat(item.display, \"/\").concat(item.name),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, item.display)), item.category === 'color' && __jsx(Link, {\n        href: \"colorcode/\".concat(item.display, \"/\").concat(item.id),\n        as: process.env.BACKEND_URL + \"colorcode/\".concat(item.display, \"/\").concat(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, item.display)));\n    }))));\n  })));\n}\n\n_s(DrawerNav, \"esH/hGKPBbP6QhNsD6CuHOnChY4=\");\n\n_c = DrawerNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerNav\");","map":{"version":3,"sources":["/home/fazna/gudofWeb/pages/DrawerNav.js"],"names":["React","TabPane","Link","DrawerNav","names","toolType","useState","array","setArray","ToolType","setTooltype","handleChangeTrue","newTooltype","map","item","show","handleShow","id","console","log","setBool","bool","handleSearch","event","tools","filter","target","value","display","toLowerCase","indexOf","setTools","marginTop","e","undefined","type","height","flex","name","marginLeft","marginRight","width","category","process","env","BACKEND_URL"],"mappings":"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","sourcesContent":["import { Card, Row,Input,Layout, Button } from 'antd';\nimport React from 'react';\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\nimport Link from 'next/link'\n\nexport default function DrawerNav({names , toolType}) {\n  \n\n  \n  const [array,setArray] = React.useState(names)\n  const  [ToolType,setTooltype] = React.useState(toolType)    \n  const handleChangeTrue = () => {\n    let newTooltype = ToolType\n    newTooltype.map(item=>item.show =true)\n    setTooltype(newTooltype)\n}\n  \nconst handleShow = (id) => {\n  let newTooltype = ToolType\n  newTooltype.map(item=>item.id===id &&( item.show=!item.show))\n  setTooltype(newTooltype)\n  console.log(ToolType)\n  setBool(!bool)\n}\n\n  const handleSearch = (event) => {\n    handleChangeTrue()\n    setArray(tools.filter((item) => ((event.target.value!== \"\") && item.display.toLowerCase().indexOf(event.target.value.toLowerCase())!== -1) ))\n    if(event.target.value ===\"\")\n       setArray(tools)\n       console.log(array)\n  }\n  const [bool,setBool] = React.useState(true)\n  const [tools,setTools] = React.useState(names)\n    return (\n    <div>\n      \n        {/* hello\n        <Button onClick={console.log(ToolType)}>Click</Button> */}\n      <Layout>\n      <Input placeholder=\"Search\" prefix={<i style={{marginTop:\"-5px\"}} className=\"material-icons\">search</i>} onInput={(e)=>handleSearch(e)} />\n\n        {ToolType!==undefined &&\n          ToolType.map(\n            (type) => \n            <div>\n              <div onClick={()=>handleShow(type.id)} style={{display:\"flex\",height:\"45px\"}}>\n                <div style={{flex:10}}>{type.name}</div>\n                <i style={{flex:1}} className=\"material-icons\">arrow_drop_down</i>\n                </div>\n               {type.show===true  && <div style={{marginLeft:\"20px\",marginRight:\"20px\"}}>\n            \n                    <Row >\n                      \n                    {array.map(item=> item.type === type.type &&\n                     <Card className=\"carditems cardwidth\" style={{width:\"300px\",flex:1}}>\n                       {item.category === 'instrumentation' &&\n                      <Link href={`sliderTool/${item.display}/${item.id}`}>\n                        <a>{item.display}</a>\n                    </Link> }\n                    {item.category === 'zero' &&\n                      <Link href={`zerotox/${item.display}/${item.id}`} as={ process.env.BACKEND_URL +`zerotox/${item.display}/${item.id}`}>\n                        <a>{item.display}</a>\n                    </Link> }\n                    {item.category === 'electrical' &&\n                      <Link href={`functions/${item.display}/${item.id}`} as={ process.env.BACKEND_URL +`functions/${item.display}/${item.id}`}>\n                        <a>{item.display}</a>\n                    </Link> }\n                    {item.category === 'conversion' &&\n                      <Link href={`conversion/${item.display}/${item.name}`} as={ process.env.BACKEND_URL +`conversion/${item.display}/${item.name}`}>\n                        <a>{item.display}</a>\n                    </Link> }\n                    {item.category === 'color' &&\n                      <Link href={`colorcode/${item.display}/${item.id}`} as={ process.env.BACKEND_URL +`colorcode/${item.display}/${item.id}`}>\n                        <a>{item.display}</a>\n                    </Link> }\n                     </Card>)}\n                    </Row></div> }\n                                       </div>\n          )\n        }\n        </Layout>\n        \n      </div>\n   \n\n\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}