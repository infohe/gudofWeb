{"ast":null,"code":"import \"antd/lib/slider/style\";\nimport _Slider from \"antd/lib/slider\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nexport default function Slidertools(_ref) {\n  var a = _ref.a,\n      b = _ref.b,\n      name = _ref.name,\n      qn = _ref.qn,\n      res = _ref.res,\n      display = _ref.display,\n      desc = _ref.desc,\n      functions = _ref.functions,\n      showDrawer = _ref.showDrawer;\n\n  var _React$useState = React.useState(qn),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      question = _React$useState2[0],\n      setQuestion = _React$useState2[1];\n\n  var _React$useState3 = React.useState(res),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      result = _React$useState4[0],\n      setResult = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      resultn = _React$useState6[0],\n      setResultn = _React$useState6[1];\n\n  var setFn = function setFn(value) {\n    // setQuestion(newValue)\n    setResultn(1);\n    setResult((value - a) * 100 / (b - a));\n    setQuestion(value);\n    console.log(value);\n    document.getElementById('InputID').value = '';\n  };\n\n  var setIn = function setIn(e) {\n    setResultn(1);\n    console.log(e.target.value);\n\n    if (e.target.value !== NaN) {\n      setQuestion(Number(e.target.value));\n      setResult((Number(e.target.value) - a) * 100 / (b - a));\n    }\n  };\n\n  var setRn = function setRn(e) {\n    setResultn(1);\n\n    if (e.target.value !== NaN) {\n      setResult(e.target.value);\n      setQuestion(Number(e.target.value) * (b - a) / 100 + a);\n    }\n  };\n\n  var resultfn = function resultfn(value) {\n    setResultn(1);\n    setResult(value);\n    setQuestion(value * (b - a) / 100 + a);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"toolbox\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"toolbox-heading\"\n  }, display, \" \"), __jsx(\"hr\", {\n    className: \"hr\"\n  }), __jsx(\"div\", {\n    className: \"toolbox-calc\"\n  }, __jsx(\"div\", {\n    className: \"heading\"\n  }, \"Calculation\"), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      marginBottom: \"10px\",\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }, __jsx(_Input, {\n    style: {\n      flex: 4,\n      marginRight: \"10px\"\n    },\n    type: \"number\",\n    className: \"input\",\n    id: \"InputID\",\n    placeholder: question.toString() + \" \" + name,\n    onChange: function onChange(e) {\n      return setIn(e);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      flex: 2\n    }\n  }, __jsx(\"div\", {\n    style: {\n      \"float\": \"right\"\n    }\n  }, a, \" \", name)), __jsx(_Slider, {\n    style: {\n      flex: 10\n    },\n    min: a,\n    max: b,\n    value: question,\n    onChange: function onChange(e) {\n      return setFn(e);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      flex: 2\n    }\n  }, b, \" \", name)), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }, __jsx(_Input, {\n    style: {\n      flex: 4,\n      marginRight: \"10px\"\n    },\n    type: \"number\",\n    className: \"input\",\n    id: \"InputID2\",\n    placeholder: result.toString() + \" %\",\n    onChange: function onChange(e) {\n      return setRn(e);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      flex: 2,\n      \"float\": \"right\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      \"float\": \"right\"\n    }\n  }, \"0%\")), __jsx(_Slider, {\n    style: {\n      flex: 10\n    },\n    value: result,\n    onChange: function onChange(e) {\n      return resultfn(e);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      flex: 2\n    }\n  }, \"100%\")), __jsx(\"br\", null)), resultn !== undefined && __jsx(\"div\", null, __jsx(\"hr\", {\n    className: \"hr\"\n  }), __jsx(\"div\", {\n    className: \"toolbox-desc\"\n  }, __jsx(\"div\", {\n    className: \"heading\"\n  }, \"Result\"), question, \" \", name, \" = \", result, \" %\")), __jsx(\"hr\", {\n    className: \"hr\"\n  }), __jsx(\"div\", {\n    className: \"toolbox-desc toolbox-calc\"\n  }, __jsx(\"div\", {\n    className: \"heading\"\n  }, \"Description\"), desc))));\n}","map":null,"metadata":{},"sourceType":"module"}