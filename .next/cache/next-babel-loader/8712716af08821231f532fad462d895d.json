{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar __jsx = React.createElement;\nimport React from 'react';\nvar TabPane = _Tabs.TabPane;\nimport Link from 'next/link';\nimport { stringSpaceToHyphen } from '.';\nimport { useRouter } from 'next/router';\nexport default function SideNav(_ref) {\n  var names = _ref.names,\n      toolType = _ref.toolType,\n      key2 = _ref.key2;\n\n  var _React$useState = React.useState(names),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      array = _React$useState2[0],\n      setArray = _React$useState2[1];\n\n  var _React$useState3 = React.useState(toolType),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ToolType = _React$useState4[0],\n      setTooltype = _React$useState4[1];\n\n  var handleChangeTrue = function handleChangeTrue() {\n    var newTooltype = ToolType;\n    newTooltype.map(function (item) {\n      return item.show = true;\n    });\n    setTooltype(newTooltype);\n  };\n\n  React.useEffect(function () {\n    return console.log(\"type\", ToolType);\n  });\n\n  var handleSearch = function handleSearch(event) {\n    handleChangeTrue();\n    setArray(tools.filter(function (item) {\n      return event.target.value !== \"\" && item.display.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1;\n    }));\n    if (event.target.value === \"\") setArray(tools);\n    console.log(array);\n  };\n\n  var _React$useState5 = React.useState(names),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tools = _React$useState6[0],\n      setTools = _React$useState6[1];\n\n  return __jsx(\"div\", null, __jsx(_Layout, null, __jsx(_Tabs, {\n    style: {\n      marginTop: \"60px\"\n    },\n    tabPosition: \"top\",\n    defaultActiveKey: key2\n  }, ToolType !== undefined && ToolType.map(function (type) {\n    return __jsx(TabPane, {\n      tab: type.name,\n      key: type.id\n    }, __jsx(\"div\", {\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      }\n    }, __jsx(_Input, {\n      style: {\n        marginLeft: \"10px\",\n        marginRight: \"30px\"\n      },\n      placeholder: \"Search\",\n      prefix: __jsx(\"i\", {\n        style: {\n          marginTop: \"-5px\"\n        },\n        className: \"material-icons\"\n      }, \"search\"),\n      onInput: function onInput(e) {\n        return handleSearch(e);\n      }\n    }), __jsx(_Row, null, array.map(function (item) {\n      return item.type === type.type && __jsx(React.Fragment, null, item.type === 'instrumentation' && __jsx(Link, {\n        href: \"../../Instrumentation/\".concat(stringSpaceToHyphen(item.display)),\n        passHref: true\n      }, __jsx(_Card, {\n        className: \"\".concat(item.category === \"conversion\" ? active(item.name) : active(item.display)),\n        style: {\n          flex: 1\n        }\n      }, item.display)), item.type === 'electrical' && __jsx(Link, {\n        href: \"../../Electrical/\".concat(stringSpaceToHyphen(item.display)),\n        passHref: true\n      }, __jsx(_Card, {\n        className: \"\".concat(item.category === \"conversion\" ? active(item.name) : active(item.display)),\n        style: {\n          flex: 1\n        }\n      }, item.display)), item.type === 'conversions' && __jsx(Link, {\n        href: \"../../Conversion/\".concat(item.name),\n        passHref: true\n      }, __jsx(_Card, {\n        className: \"\".concat(item.category === \"conversion\" ? active(item.name) : active(item.display)),\n        style: {\n          flex: 1\n        }\n      }, item.display)), item.type === 'mechanical' && __jsx(Link, {\n        href: \"../../Mechanical/\".concat(stringSpaceToHyphen(item.display)),\n        passHref: true\n      }, __jsx(_Card, {\n        className: \"\".concat(item.category === \"conversion\" ? active(item.name) : active(item.display)),\n        style: {\n          flex: 1\n        }\n      }, item.display)));\n    }))));\n  }))));\n}\nexport var active = function active(name) {\n  var router = useRouter();\n\n  if (router.query.name === stringSpaceToHyphen(name)) {\n    return \"activecard\";\n  } else return \"carditems1\";\n};","map":null,"metadata":{},"sourceType":"module"}