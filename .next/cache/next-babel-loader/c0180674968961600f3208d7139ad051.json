{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Card, Row, Input, Layout, Button } from 'antd';\nimport React from 'react';\nimport { Tabs } from 'antd';\nvar TabPane = Tabs.TabPane;\nimport Link from 'next/link';\nexport default function DrawerNav(_ref) {\n  var names = _ref.names,\n      toolType = _ref.toolType;\n\n  var _React$useState = React.useState(names),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      array = _React$useState2[0],\n      setArray = _React$useState2[1];\n\n  var _React$useState3 = React.useState(toolType),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      ToolType = _React$useState4[0],\n      setTooltype = _React$useState4[1];\n\n  var handleChangeTrue = function handleChangeTrue() {\n    var newTooltype = ToolType;\n    newTooltype.map(function (item) {\n      return item.show = true;\n    });\n    setTooltype(newTooltype);\n  };\n\n  var handleShow = function handleShow(id) {\n    var newTooltype = ToolType;\n    newTooltype.map(function (item) {\n      return item.id === id && (item.show = !item.show);\n    });\n    setTooltype(newTooltype);\n    console.log(ToolType);\n    setBool(!bool);\n  };\n\n  var handleSearch = function handleSearch(event) {\n    handleChangeTrue();\n    setArray(tools.filter(function (item) {\n      return event.target.value !== \"\" && item.display.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1;\n    }));\n    if (event.target.value === \"\") setArray(tools);\n    console.log(array);\n  };\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      bool = _React$useState6[0],\n      setBool = _React$useState6[1];\n\n  var _React$useState7 = React.useState(names),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      tools = _React$useState8[0],\n      setTools = _React$useState8[1];\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Input, {\n    placeholder: \"Search\",\n    prefix: __jsx(\"i\", {\n      style: {\n        marginTop: \"-5px\"\n      },\n      className: \"material-icons\"\n    }, \"search\"),\n    onInput: function onInput(e) {\n      return handleSearch(e);\n    }\n  }), ToolType !== undefined && ToolType.map(function (type) {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      onClick: function onClick() {\n        return handleShow(type.id);\n      },\n      style: {\n        display: \"flex\",\n        height: \"45px\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        flex: 10\n      }\n    }, type.name), __jsx(\"i\", {\n      style: {\n        flex: 1\n      },\n      className: \"material-icons\"\n    }, \"arrow_drop_down\")), type.show === true && __jsx(\"div\", {\n      style: {\n        marginLeft: \"20px\",\n        marginRight: \"20px\"\n      }\n    }, __jsx(Row, null, array.map(function (item) {\n      return item.type === type.type && __jsx(Card, {\n        className: \"carditems cardwidth\",\n        style: {\n          width: \"300px\",\n          flex: 1\n        }\n      }, item.category === 'instrumentation' && __jsx(Link, {\n        href: \"sliderTool/\".concat(item.display, \"/\").concat(item.id),\n        as: 'gudofWeb/' + \"sliderTool/\".concat(item.display, \"/\").concat(item.id)\n      }, __jsx(\"a\", null, item.display)), item.category === 'zero' && __jsx(Link, {\n        href: \"zerotox/\".concat(item.display, \"/\").concat(item.id),\n        as: 'gudofWeb/' + \"zerotox/\".concat(item.display, \"/\").concat(item.id)\n      }, __jsx(\"a\", null, item.display)), item.category === 'electrical' && __jsx(Link, {\n        href: \"functions/\".concat(item.display, \"/\").concat(item.id),\n        as: 'gudofWeb/' + \"functions/\".concat(item.display, \"/\").concat(item.id)\n      }, __jsx(\"a\", null, item.display)), item.category === 'conversion' && __jsx(Link, {\n        href: \"conversion/\".concat(item.display, \"/\").concat(item.name),\n        as: 'gudofWeb/' + \"conversion/\".concat(item.display, \"/\").concat(item.name)\n      }, __jsx(\"a\", null, item.display)), item.category === 'color' && __jsx(Link, {\n        href: \"colorcode/\".concat(item.display, \"/\").concat(item.id),\n        as: 'gudofWeb/' + \"colorcode/\".concat(item.display, \"/\").concat(item.id)\n      }, __jsx(\"a\", null, item.display)));\n    }))));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}