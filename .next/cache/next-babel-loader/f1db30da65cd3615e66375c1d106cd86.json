{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/slider/style\";\nimport _Slider from \"antd/lib/slider\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Navbar from '../../Navbar';\nimport Head from 'next/head';\nimport SideNav from '../../SideNav';\nimport DrawerNav from '../../DrawerNav';\nvar TabPane = _Tabs.TabPane;\nexport var __N_SSG = true;\nexport default function Instrumentation(_ref) {\n  var params = _ref.params,\n      functions = _ref.functions,\n      toolType = _ref.toolType,\n      names = _ref.names;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDrawer = function showDrawer() {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  var onClose = function onClose() {\n    setVisible(false);\n  };\n\n  React.useEffect(function () {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      question = _React$useState4[0],\n      setQuestion = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      result = _React$useState6[0],\n      setResult = _React$useState6[1];\n\n  var vari;\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      queryid = _React$useState8[0],\n      setQueryId = _React$useState8[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _React$useState9 = React.useState(names),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      array = _React$useState10[0],\n      setarray = _React$useState10[1];\n\n  var _React$useState11 = React.useState(toolType),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      tooltype = _React$useState12[0],\n      setTooltype = _React$useState12[1]; // let vari=  functions.find(item => item.stringId === queryid.toString())\n\n\n  var setFn = function setFn(value) {\n    // setQuestion(newValue)\n    setResult((value - a) * 100 / (b - a));\n    setQuestion(value);\n    console.log(value);\n    document.getElementById('InputID').value = '';\n  };\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      a = _React$useState14[0],\n      seta = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      b = _React$useState16[0],\n      setb = _React$useState16[1];\n\n  var setIn = function setIn(e) {\n    console.log(e.target.value);\n\n    if (e.target.value !== NaN) {\n      setQuestion(Number(e.target.value));\n      setResult((Number(e.target.value) - a) * 100 / (b - a));\n    }\n  };\n\n  var setRn = function setRn(e) {\n    if (e.target.value !== NaN) {\n      setResult(e.target.value);\n      setQuestion(Number(e.target.value) * (b - a) / 100 + a);\n    }\n  };\n\n  var resultfn = function resultfn(value) {\n    setResult(value);\n    setQuestion(value * (b - a) / 100 + a);\n  };\n\n  React.useEffect(function () {\n    if (router && router.query) {\n      setQueryId(id);\n      console.log(\"router\", router.query.id);\n      console.log(\"queryid\", id);\n    }\n  }, [router, router.query]);\n\n  var _React$useState17 = React.useState({\n    0: \"0\",\n    100: \"100\"\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      marks = _React$useState18[0],\n      setMarks = _React$useState18[1];\n\n  var _React$useState19 = React.useState(),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      name = _React$useState20[0],\n      setName = _React$useState20[1];\n\n  var _React$useState21 = React.useState(),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      title = _React$useState22[0],\n      setTitle = _React$useState22[1];\n\n  React.useEffect(function () {\n    if (queryid !== undefined) {\n      vari = functions.find(function (item) {\n        return item.stringId === queryid.toString();\n      });\n      seta(vari.a);\n      setName(vari.name);\n      setb(vari.b);\n      setTitle(router.query.name);\n      setQuestion(functions.find(function (item) {\n        return item.stringId === queryid.toString();\n      }).a);\n    }\n  }, [queryid]);\n  React.useEffect(function () {\n    if (a !== NaN && a !== undefined && b !== NaN && b !== undefined) {\n      var anumber = parseInt(a);\n      var astring = a.toString();\n      console.log(\"a is\", a, \"b is\", b);\n      console.log(typeof anumber, typeof astring);\n      if (!isNaN(a)) setMarks({\n        a: \"hello\",\n        b: \"h\"\n      });\n    }\n  }, [a, b]);\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, router.query.name), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\"\n  }), functions !== undefined && functions.map(function (item) {\n    return item.stringId === router.query.id.toString() && __jsx(\"meta\", {\n      key: \"description\",\n      name: \"description\",\n      content: item.desc\n    });\n  })), __jsx(Navbar, {\n    showDrawer: showDrawer\n  }), __jsx(\"div\", {\n    className: \"tools-container\"\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType\n  })), __jsx(\"div\", {\n    className: \"tools-left\"\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\"\n  }, __jsx(\"div\", {\n    className: \"toolbox\"\n  }, queryid !== undefined && a !== undefined && question !== undefined && functions.map(function (item) {\n    return item.stringId === queryid.toString() && __jsx(\"div\", {\n      key: item.stringId\n    }, __jsx(\"div\", {\n      className: \"toolbox-heading\"\n    }, item.display, \" \"), __jsx(\"hr\", {\n      className: \"hr\"\n    }), __jsx(\"div\", {\n      className: \"toolbox-calc\"\n    }, __jsx(\"div\", {\n      className: \"heading\"\n    }, \"Calculation\"), __jsx(\"br\", null), __jsx(\"div\", {\n      style: {\n        marginBottom: \"10px\",\n        display: \"flex\",\n        alignItems: \"center\"\n      }\n    }, __jsx(_Input, {\n      style: {\n        flex: 4,\n        marginRight: \"10px\"\n      },\n      type: \"number\",\n      className: \"input\",\n      id: \"InputID\",\n      placeholder: question.toString() + \" \" + name,\n      onChange: function onChange(e) {\n        return setIn(e);\n      }\n    }), __jsx(\"div\", {\n      style: {\n        flex: 2\n      }\n    }, __jsx(\"div\", {\n      style: {\n        \"float\": \"right\"\n      }\n    }, a, \" \", name)), __jsx(_Slider, {\n      style: {\n        flex: 10\n      },\n      min: a,\n      max: b,\n      value: question,\n      onChange: function onChange(e) {\n        return setFn(e);\n      }\n    }), __jsx(\"div\", {\n      style: {\n        flex: 2\n      }\n    }, b, \" \", name)), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      }\n    }, __jsx(_Input, {\n      style: {\n        flex: 4,\n        marginRight: \"10px\"\n      },\n      type: \"number\",\n      className: \"input\",\n      id: \"InputID2\",\n      placeholder: result.toString() + \" %\",\n      onChange: function onChange(e) {\n        return setRn(e);\n      }\n    }), __jsx(\"div\", {\n      style: {\n        flex: 2,\n        \"float\": \"right\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        \"float\": \"right\"\n      }\n    }, \"0%\")), __jsx(_Slider, {\n      style: {\n        flex: 10\n      },\n      value: result,\n      onChange: function onChange(e) {\n        return resultfn(e);\n      }\n    }), __jsx(\"div\", {\n      style: {\n        flex: 2\n      }\n    }, \"100%\")), __jsx(\"br\", null)), __jsx(\"hr\", {\n      className: \"hr\"\n    }), __jsx(\"div\", {\n      className: \"toolbox-desc\"\n    }, __jsx(\"div\", {\n      className: \"heading\"\n    }, \"Result\"), question, \" \", name, \" = \", result, \" %\"), __jsx(\"hr\", {\n      className: \"hr\"\n    }), __jsx(\"div\", {\n      className: \"toolbox-desc\"\n    }, __jsx(\"div\", {\n      className: \"heading\"\n    }, \"Description\"), item.desc));\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}