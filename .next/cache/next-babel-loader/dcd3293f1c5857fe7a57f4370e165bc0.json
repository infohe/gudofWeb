{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Navbar from '../Navbar';\nimport Head from 'next/head';\nimport SideNav from '../SideNav';\nimport DrawerNav from '../DrawerNav';\nimport { stringSpaceToHyphen } from '..';\nimport Slidertools from '../components/Slidertools';\nimport Zero from '../components/Zero';\nimport Functions from '../components/Functions';\nexport var __N_SSG = true;\nexport default function Instrumentation(_ref) {\n  var params = _ref.params,\n      functions = _ref.functions,\n      toolType = _ref.toolType,\n      names = _ref.names;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var showDrawer = function showDrawer() {\n    if (window.innerWidth <= 700) setVisible(true);\n  };\n\n  var onClose = function onClose() {\n    setVisible(false);\n  };\n\n  React.useEffect(function () {\n    if (window.innerWidth > 700) setVisible(false);\n  });\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      question = _React$useState4[0],\n      setQuestion = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      result = _React$useState6[0],\n      setResult = _React$useState6[1];\n\n  var vari;\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      queryid = _React$useState8[0],\n      setQueryId = _React$useState8[1];\n\n  var router = useRouter();\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      a = _React$useState10[0],\n      seta = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      b = _React$useState12[0],\n      setb = _React$useState12[1];\n\n  React.useEffect(function () {\n    if (router && router.query) {\n      setQueryId(router.query.name);\n      console.log(\"router\", router.query.id);\n    }\n  }, [router, router.query]);\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      display = _React$useState14[0],\n      setDisplay = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      name = _React$useState16[0],\n      setName = _React$useState16[1];\n\n  var _React$useState17 = React.useState(),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      category = _React$useState18[0],\n      setCategory = _React$useState18[1];\n\n  var _React$useState19 = React.useState(),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      id = _React$useState20[0],\n      setId = _React$useState20[1];\n\n  React.useEffect(function () {\n    if (queryid !== undefined) {\n      var item = names.find(function (item) {\n        return stringSpaceToHyphen(item.display) === router.query.name;\n      });\n      setCategory(item.category);\n\n      if (functions.find(function (item) {\n        return stringSpaceToHyphen(item.display) === router.query.name;\n      }) !== undefined) {\n        var _vari = functions.find(function (item) {\n          return stringSpaceToHyphen(item.display) === router.query.name;\n        });\n\n        seta(_vari.a);\n        setQuestion(_vari.a);\n        setName(_vari.name);\n        setb(_vari.b);\n        setDisplay(_vari.display);\n      }\n\n      setId(item.id);\n      console.log(\"id\", id);\n    }\n  }, [queryid]);\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, router.query.name, \" Instrumentation Tool\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    rel: \"stylesheet\"\n  }), functions !== undefined && functions.map(function (item) {\n    return stringSpaceToHyphen(item.display) === router.query.name && __jsx(\"meta\", {\n      key: \"description\",\n      name: \"description\",\n      content: item.desc\n    });\n  })), __jsx(Navbar, {\n    showDrawer: showDrawer\n  }), __jsx(\"div\", {\n    className: \"tools-container\"\n  }, __jsx(_Drawer, {\n    width: 350,\n    title: \"gudofConvert\",\n    placement: \"left\",\n    closable: true,\n    onClose: onClose,\n    visible: visible\n  }, __jsx(DrawerNav, {\n    names: names,\n    toolType: toolType,\n    onClose: function onClose() {\n      return setVisible(false);\n    }\n  })), __jsx(\"div\", {\n    className: \"tools-left\"\n  }, __jsx(SideNav, {\n    names: names,\n    toolType: toolType,\n    key2: \"1\"\n  })), __jsx(_Layout, {\n    className: \"toolbox-layout\"\n  }, question !== undefined && category === \"instrumentation\" && __jsx(Slidertools, {\n    desc: \"\",\n    display: display,\n    a: a,\n    b: b,\n    res: result,\n    qn: question,\n    name: name\n  }), category === \"electrical\" && __jsx(Functions, {\n    id: id\n  }), category === \"zero\" && __jsx(Zero, null))));\n}","map":null,"metadata":{},"sourceType":"module"}